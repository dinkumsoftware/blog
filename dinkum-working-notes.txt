dinkum-working-notes.txt
Copyright 2014-2016 Dinkum Software

A running blog-like account of DinkumSoftware's FOSS activity.
https://github.com/dinumsoftware/dinkum-working-notes


A running blog of Dinkum Software's open source development activity
not elsewhere documented.


   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

This is 80 characters.
         1         2         3         4         5         6         7         8
123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789.

2014-03-12 tc@DinkumSoftware.com 

Been struggling for some time with transitioning from subversion with private
servers to open source at git hub and publishing 20+ years of accumulated useful
utilities.

So I'm in that process and I created a public git repo: dinkumsoftware/blog to
hold my working notes until I get my infrastructure stable.  I think I made
an initial mistake naming it blog, thinking that git user dinkumsoftware would
distinguish it.  But it gets "cloned" to just blog.

Now, I made my first mistake, didn't take long.
So all my repos should start with dinkum-.  Kill this blog and recreate it
as dinkumsoftware/dinkum-blog.

Turns out I can rename it in github:

https://help.github.com/articles/renaming-a-repository
Under repo settings

I originally wanted to put all my work under GNU license, but that means
that others can't incorporate it with proprietary software.  While I'm
a long time user of open source stuff, I'm hoping future real-time stuff
gets used by real vendors and GNU would limit it's distribution.

GNU recommended apache 2.0 for non-copyleft, so that's what I'll use for
software:
http://directory.fsf.org/wiki/License:Apache2.0

GNU recommends GFDL for big complicated documentation.
I'll probably use that web pages and manuals:

For really small files, GNU recommends:
https://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html

GIT only "knows about Apache 2.0, So for now I'll put everything under that.

I'm writing in Markdown, so I ought to know a little about it.
http://guides.github.com/overviews/mastering-markdown/

I made some initial wiki pages using on-line editor.
For now, just keeping the blog in the readme.md.  github has capability to
generate html (under dinkumsoftware.org if I want).  I'll need to explore that
sometime.

Enough for tonite.

2014-03-13 tc@DinkumSoftware.com 

The general thrust here is to do open source python development.  I need
reasonable project structure for python.  I'm mucked around a bit over the
last year without coming up with my own solution.  Found a great web site
that generally covers it all:
http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/

I'm in agreement with most of the things he says and he lead me to
cookiecutter which seems like a great solution for generating project
templates and use on line resources for testing, packaging, and
distributing python code.  I want to eventually end up with
dinkum-project a python "package" with some executables that let me
generate a new project with a one-liner, allow refactoring between
projects etc.  But I need small steps.

So near term goal: MOVED to line 150

As I am writing markdown for my first time, I git pushed and had a couple of
problems.
DONE

   - [x] the mention of jeffknupp wasn't highlighted.
         Turns out @mentions only work in descriptions and comments of
         Issues and Pull requests.
   - [x] the formatting of my near term goals all ran together.

Struggling with MarkDown.  GitHub has some GitHub only MarkDown enhancements.
Some of them only show up in descriptions/comments in Issues/Pull requests.
i.e. not this file.  Some seems to work in all files (like this one).

Apparently regular markdown (like html, etc) treat a new-line as regular white
space.  GitHub treats a new-line differently.  Now my problem is that my brain
is hardwired to hit enter at the edge of a screen in emacs and github renders it
to that width.  For now, keep my emacs window at 80 columns and keep hitting
the enter key.

Where's the MarkDown documentation?
[GitHub Documentation]
        (https://help.github.com/categories/88/articles)

Where's the "official" markdown reference?   Well according to (wikipedia)
[http://en.wikipedia.org/wiki/Markdown] there isn't any standard.  Note
that there is an emacs plugin. TODO

-[ ] get emacs markdown plugin

GFM github flavored markdown seems popular.

Here is a [live online Markdown Here page]
     (http://markdown-here.com/livedemo.html)
It is yet another variant of markdown,
but it follows GFM conventions on new lines. @adam-p

[John Gruber, the original authors spec]
      (http://daringfireball.net/projects/markdown/syntax)

My todo marker has historically been todo inside of angle brackets, but it
disappears.  Since you can write in-line html, MarkDown gobbles up what
look like html tags.  So I need to change my todo marker.

What does eclipse use by default?  Looks like todo(all caps) .. use that.
Follow the GFM task list convention for todo's even though it
doesn't seem to work in Markdown files in the project (like this one).  It
is still readable.

Fixed up the formatting for short term dinkum-sandbox list.

Made some dinkum markdown rules on wiki

2014-03-14 tc@DinkumSoftware.com 

Pop the stack a bit to:

So near term goal: TODO

- repo:dinkum-sandbox
  - executables:
    - *dinkum_sandbox_hello.py*      prints hello
    - *dinkum_sandbox_goodbye.py*    prints goodbye
  - shared code:
    - *sandbox.py*                   common code, in sandbox package?
                                     or dinkum.sandbox package?

End of the chain is cookiecutter.

Everything in a virtual environment.
virtualenvwrapper installs other packages.

    pip install virtualenvwrapper
no pip.

    sudo apt-get install python-pip
I put this on wiki under Dinkum Project OS packages required.

  pip install virtualenvwrapper:
Installed /home/tc/projects/dinkum-blog/build/virtualenvwrapper/pbr-0.6-py2
  error: /usr/local/lib/python2.7/dist-packages/virtualenvwrapper: Permission denied
Storing complete log in /home/tc/.pip/pip.log

It left the build directory behind.
Looks like it needs to be root for installing into system directories.

      sudo pip install virtualenvwrapper

worked, cleaned up build directory.
Now diddle my .bashrc
http://virtualenvwrapper.readthedocs.org/en/latest/install.html says:
''''
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Devel
source /usr/local/bin/virtualenvwrapper.sh
````
http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/ says:
````
$ echo "source /usr/local/bin/virtualenvwrapper.sh" >> ~/.zshrc
````

There is a default of .virtualenvs built into virtualenvwrapper.sh.
That works for me.  There is no default for PROJECT_HOME, I want it to be
projects.
```
cat <<EOF >> ~/.bashrc

# virtualenvwrapper setup
export PROJECT_HOME=$HOME/projects
source /usr/local/bin/virtualenvwrapper.sh
EOF
source ~/.bashrc

```

virtualenv doesn't appear to have man pages.

Ubuntu 12.04.02LTS package: virtualenvwrapper

Made a wiki page for a cheat sheet:

https://github.com/dinkumsoftware/dinkum-blog/wiki/_new?wiki[name]=virtualenvwrapper

enuf for now.

All the wiki pages look good, but.... this file is managled.
I need to rethink whether I want to blog and/or do workin notes in markdown.
Maybe should revert to text? Or maybe stay in markdown but put everything
in a block?... think of these things.  It might help once I have emacs markdown.

2014-03-15 tc@DinkumSoftware.com 

Decided to "blog" in pure text instead of markdown.  Even when markdown becomes
second nature, i still adds an extra step of generating the markdown and
proofing it.  Only downside is (a) links aren't alive and (b) isn't as pretty
on the net.  A price to pay.

So move this file to dinkum-blog/dinkum-blog.txt
and fix up README.md to point to (a) blog and (b) wiki

2014-03-25 tc@DinkumSoftware.com 

Working on setting up servers and documenting the tips.

2016-05-08 tc@DinkumSoftware.com 

After a brief pause (2 yrs) getting back to publishing and moving all my
code from private subversion to github.  Hopefully I can get farther this
time.

I'm going to have one hopefully massive repo in github/dinkum for now.
Later I can package individucal pieces.  I'm keeping running working notes
(this file) in a separate repo only to avoid agony when I switch branches.
It avoids premature commits and/or stashes.

Decided to publish tc@DinkumSoftware.com as timestamp on files.  I thought
I always avoided it but, turns out it was in this file.  Couldn't face
setting up another email address and now I don't have to edit software
that I publish.  We'll see if email traffic builds with (a) real users or
(b) more likely spam.

I'm also setting up a new computer (casey) at the same time.
I'll transfer exist paper notes to casey-setup.txt.

Git setup <todo> move to dinkum

git config --global  user.name    <your name>
git config --global  user.email   <your email>
git config --global  core.editor   emacs
git config --global  merge.tool    meld
git config --global  diff.guitool  meld
git config --global  merge.cmd=meld $LOCAL $MERGED $REMOTE --output $MERGED
                                            # control windows presented on
                                            # a merge.
git config --global  difftool.prompt=false
git config --global  push.default matching  # Allow push to non-upstream
                                            #repo of same name as local
git config --global  credential.helper=cache --timeout=28800
                                            # How long git remembers passwd


<todo> kill the working notes wiki by moving content into dinkum.

Working on the private site to mount a bunch of usb disks.

Also got ssh timing out with:
tc@luna:~$ Write failed: Broken pipe

ServerAliveInterval
         Sets a timeout interval in seconds after which if no data has
         been received from the server, ssh(1) will send a message through
         the encrypted channel to request a response from the server.  The
         default is 0, indicating that these messages will not be sent to
         the server.  This option applies to protocol version 2 only.

ServerAliveCountMax

	by default this is set to 3. Therefore once the
	ServerAliveInterval has sent 3 small packs of info to your
	server it will then automatically log out. Setting it to 1200
	means this process will have to occur at least 1200 times. In
	short you should be connected at least more than 12 days.

Fixed via:
    /etc/ssh/ssh_config
        Host *
	# 3 days (2 min * 2160 tries)
	ServerAliveInterval  120
	ServerAliveCountMax 2160

2016-05-10
committed root-rsync-push

Looks like the FQDN doesn't work on my servers.
Looks like two possible fixes:
    /etc/resolv.conf    (or actually another file as it is built dynamically)
    or /etc/hosts       on the 127.0.1.1 line

Try:
    /etc/hosts
        127.0.1.1	bert   ===>
        127.0.1.1	bert.DinkumSoftware.com bert
                        # ORDER important. fqdn must come first

That worked.

But bert has a static IP.
Try:
    /etc/hosts
	50.78.19.59    bert.DinkumSoftware.com bert

That seemed to fail. Probably want to specify the IP somewhere in the network or the like.

Add 127 line to casey-setup and newly created server-setup

  On bert, the following fails
    sudo su
    ssh localhost

Because I have 

/etc/ssh/sshd-config
#PasswordAuthentication yes
PermitRootLogin without-password
#PermitRootLogin yes

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

I want:

PermitRootLogin                 without-password  # default
ChallengeResponseAuthentication no                # default
PasswordAuthentication          no		  # uncomment and edit yes=>no
UsePAM                          yes		  # default

IMPORTANT! You must ssh-copy-id FIRST!
So all I have to do is change is:
PasswordAuthentication          no		  # uncomment and edit yes=>no

# Allow ssh from tc to root
# drwx------ 2 tc tc 4096 May 10 16:43 /home/tc/.ssh
# -rw------- 1 tc tc  404 May 10 16:41 /home/tc/.ssh/authorized_keys

sudo mkdir -p                              /root/.ssh
sudo chmod 700                             /root/.ssh
sudo touch                                 /root/.ssh/authorized_keys
cat /home/tc/.ssh/id_rsa.pub | sudo tee -a /root/.ssh/authorized_keys > /dev/null
sudo chmod 600                             /root/.ssh/authorized_keys

Move this to casey-setup and server-setup

2015-05-18 tc@DinkumSoftware.com 
renamed root-rsync-mirror-push dinkum-root-rsync-mirror-push 


<todo> deploy it to luna, ernie, bert in /usr/local/sbin and test it.

2016-05-20

Installed wireshark.
Was about to put myself in wireshark group to avoid running it as root as suggested by
the documentation.... but there is no group wireshark.


https://ask.wireshark.org/questions/7523/ubuntu-machine-no-interfaces-listed
$ sudo apt-get install wireshark
$ sudo dpkg-reconfigure wireshark-common 
$ sudo usermod -a -G wireshark $USER
$ sudo reboot


2016-05-30
Python plotting librarys:
    matplotlib
    Pyqtgraph
    plot.ly


2016-06-12 tc@DinkumSoftware.com
Installed zenmap
    
2016-10-26

Back from summer of sailing.  Fixing up svn.
Installed subversion on casey.

Prior work in svn-recovery-2015-01-02.readme.txt

Try to checkout:
svn checkout svn+ssh://eth0.bert.dinkumsoftware.com/home/tc/network-services/svn svn-root
It worked.  I must have fixed it before. (dump before error, dump after error, load together)

Never easy....
The file count under active doesn't match via find -type f | wc -l
  active:
    casey:    23096		13G
    orphan:   42094		25G
  yesterday's news:
    casey:    937		9.2G		
    orphan:   not present


ssh ernie;cd /home/dinkum/opt
[tc@ernie opt]$ svnadmin verify svn
svnadmin: Reading one svndiff window read beyond the end of the representation

ssh bert; cd network-services
svnadmin verify svn
* Verified revision 1513.


<todo> clean up:
    ernie: /home/dinkum/opt/svn-recovery
    luna: ~data/svn-root
    bert: ~/network-services/svn ?

So... ernie did not get fixed, but yet I can check out
all of svn from ernie without an error.  Must be
a client side change on casey.... but serious difference in file size.


Check it out from bert
svn checkout svn+ssh://eth0.bert.dinkumsoftware.com/home/tc/network-services/svn/trunk svn-root-bert

2016-10-27 tc@DinkumSoftware.com

svn on bert and ernie differ.  Makes senses as there have been commits to ernie since then.
wait... everything is pointing to bert, including orphan.
So why did diff produce differences?

OK.... so call bert the gospel svn.
checkout both the active/yesterdays-news to casey:


tc@casey:~/projects$ svn checkout svn+ssh://eth0.bert.dinkumsoftware.com/home/tc/network-services/svn/trunk/active svn-root-active
		     svn checkout svn+ssh://eth0.bert.dinkumsoftware.com/home/tc/network-services/svn/trunk/yesterdays-news  svn-root-yesterdays-news

<todo> External disk isn't working.  It gets an error when you to write to it


<todo> Rest of orphan to xfer:
       Pictures (desktop mostly), Ernie pictures to bert?
       emacs settings (compare against svn)
       bin (compare against svn/git)
       encrypted bin
       Desktop

<todo> check bert firewall setting, shut down all and switch to vpn.

2016-11-01 tc@DinkumSoftware.com

meganet is retiring cape.com.  I should use the opportunity to switch ISPs, but first I'll convert.
They are mapping:
    X@cape.com => X@meganet.net
    X@dinkumsoftware.com => Y@cape.com => Y@meganet.net
Servers:
    pop.meganet.net
    smtp.meganet.net
Same username/password
They are mapping X@dinkumsoftware.com addresses, so don't have to tell anyone externally.


General email plan: <todo>
x   get casey thunderbird email working with meganet addresses
x   switch my phone and tablet
        <todo>
        can't send mail from phone reliably.  Works sometimes. (tablet works ok).  There is an icon on failure.
x   tell debbie about the switch, url: meganet.net/cape-email-conversion for instructions
    transfer all of orphan email to casey (thunderbird to thunderbird)
    transfer some mailing lists
    finish up orphan empty
    transfer all of nellie email to casey (disk swap)
    switch email providers: (maybe search archived mail for others)
        2 pop boxes
        tc:     vendor content nic-guru hello bcc jedgar
	debbie:
	Less than or equal to meganet charges
    set up imap server on bert

2016-11-09
Setting up emacs in git and casey/toms-pc

In svn:
    backups/tilde_tc/_DINKUM_DOT__.tc-toolbox
	             _DINKUM_DOT_.emacs
To git (dinkum):
   emacs
     README.txt
     bin/dinkum-install-tc-emacs
     tc-init.emacs
     tc-lisp/*.el

Deployed (by dinkum-install-tc-emacs)
   ~/.emacs.d/init.el    (load "~/.emacs.d/tc-init.emacs")
   ~/.emacs.d/tc-init.emacs
   ~/.emacs.d/tc-lisp/*.el


To cleanup:
    svn-root-active/backups/tilde_tc ==>
    svn-root-yesterdays-news/to-git/backups/tilde_tc

2016-11-10
Debugging emacs customizations.
Support name and directory changes
bug fix.  previous-window wasn't working.  Had to rename it to
tc-previous-window to avoid name collision with internal emacs function.

Function keys didn't work in emacs. emacs wasn't seeing F<n>.
Turns out on dell xps, F<n> does some system specific function.
If one holds down the Fn key while pressing F<n>, emacs sees it.
One can change the default behavior to make F<n> passed thru to
application the default and holding down the Fn key invokes the
hardware function. To alter:

    reboot and pound on F12
    Post Behavior
        FN Lock    CHECK    ; Fn+Esc toggles primary/secondary use of F<n>

        Lock Mode Disable/Standard        ; F<n> does media stuff
                                          ; Fn F<n> passed thru to application
        Lock Mode Disable/Secondard CHECK ; F<n> passed thru to application
                                          ; Fn F<n> required for media

date-stamp.el
    switched back to yyyy-mm-dd

Currently the user signature is hardwired into date-and-sign.el
Not a good solution. How about:

    environment variable: DINKUM_USER_EMAIL
    if it doesn't exist, use 
        environment variable: USER

NOTE WELL: These definitions must be in .profile (NOT .bashrc) otherwise
the gnome apps won't see them.  i.e. if emacs is launched from icon rather
than terminal... It won't see a DINKUM_USER_EMAIL created in .bashrc
