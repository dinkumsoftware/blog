dinkum-working-notes.txt
Copyright 2014-2019 Dinkum Software

A running blog-like account of DinkumSoftware's FOSS activity.
https://github.com/dinkumsoftware/dinkum-working-notes


A running blog of Dinkum Software's open source development activity
not elsewhere documented.


   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

This is 80 characters.
         1         2         3         4         5         6         7         8
123456789.123456789.123456789.123456789.123456789.123456789.123456789.123456789.

2014-03-12 tc@DinkumSoftware.com 

Been struggling for some time with transitioning from subversion with private
servers to open source at git hub and publishing 20+ years of accumulated useful
utilities.

So I'm in that process and I created a public git repo: dinkumsoftware/blog to
hold my working notes until I get my infrastructure stable.  I think I made
an initial mistake naming it blog, thinking that git user dinkumsoftware would
distinguish it.  But it gets "cloned" to just blog.

Now, I made my first mistake, didn't take long.
So all my repos should start with dinkum-.  Kill this blog and recreate it
as dinkumsoftware/dinkum-blog.

Turns out I can rename it in github:

https://help.github.com/articles/renaming-a-repository
Under repo settings

I originally wanted to put all my work under GNU license, but that means
that others can't incorporate it with proprietary software.  While I'm
a long time user of open source stuff, I'm hoping future real-time stuff
gets used by real vendors and GNU would limit it's distribution.

GNU recommended apache 2.0 for non-copyleft, so that's what I'll use for
software:
http://directory.fsf.org/wiki/License:Apache2.0

GNU recommends GFDL for big complicated documentation.
I'll probably use that web pages and manuals:

For really small files, GNU recommends:
https://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html

GIT only "knows about Apache 2.0, So for now I'll put everything under that.

I'm writing in Markdown, so I ought to know a little about it.
http://guides.github.com/overviews/mastering-markdown/

I made some initial wiki pages using on-line editor.
For now, just keeping the blog in the readme.md.  github has capability to
generate html (under dinkumsoftware.org if I want).  I'll need to explore that
sometime.

Enough for tonite.

2014-03-13 tc@DinkumSoftware.com 

The general thrust here is to do open source python development.  I need
reasonable project structure for python.  I'm mucked around a bit over the
last year without coming up with my own solution.  Found a great web site
that generally covers it all:
http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/

I'm in agreement with most of the things he says and he lead me to
cookiecutter which seems like a great solution for generating project
templates and use on line resources for testing, packaging, and
distributing python code.  I want to eventually end up with
dinkum-project a python "package" with some executables that let me
generate a new project with a one-liner, allow refactoring between
projects etc.  But I need small steps.

So near term goal: MOVED to line 150

As I am writing markdown for my first time, I git pushed and had a couple of
problems.
DONE

   - [x] the mention of jeffknupp wasn't highlighted.
         Turns out @mentions only work in descriptions and comments of
         Issues and Pull requests.
   - [x] the formatting of my near term goals all ran together.

Struggling with MarkDown.  GitHub has some GitHub only MarkDown enhancements.
Some of them only show up in descriptions/comments in Issues/Pull requests.
i.e. not this file.  Some seems to work in all files (like this one).

Apparently regular markdown (like html, etc) treat a new-line as regular white
space.  GitHub treats a new-line differently.  Now my problem is that my brain
is hardwired to hit enter at the edge of a screen in emacs and github renders it
to that width.  For now, keep my emacs window at 80 columns and keep hitting
the enter key.

Where's the MarkDown documentation?
[GitHub Documentation]
        (https://help.github.com/categories/88/articles)

Where's the "official" markdown reference?   Well according to (wikipedia)
[http://en.wikipedia.org/wiki/Markdown] there isn't any standard.  Note
that there is an emacs plugin. TODO

-[ ] get emacs markdown plugin

GFM github flavored markdown seems popular.

Here is a [live online Markdown Here page]
     (http://markdown-here.com/livedemo.html)
It is yet another variant of markdown,
but it follows GFM conventions on new lines. @adam-p

[John Gruber, the original authors spec]
      (http://daringfireball.net/projects/markdown/syntax)

My todo marker has historically been todo inside of angle brackets, but it
disappears.  Since you can write in-line html, MarkDown gobbles up what
look like html tags.  So I need to change my todo marker.

What does eclipse use by default?  Looks like todo(all caps) .. use that.
Follow the GFM task list convention for todo's even though it
doesn't seem to work in Markdown files in the project (like this one).  It
is still readable.

Fixed up the formatting for short term dinkum-sandbox list.

Made some dinkum markdown rules on wiki

2014-03-14 tc@DinkumSoftware.com 

Pop the stack a bit to:

So near term goal: TODO

- repo:dinkum-sandbox
  - executables:
    - *dinkum_sandbox_hello.py*      prints hello
    - *dinkum_sandbox_goodbye.py*    prints goodbye
  - shared code:
    - *sandbox.py*                   common code, in sandbox package?
                                     or dinkum.sandbox package?

End of the chain is cookiecutter.

Everything in a virtual environment.
virtualenvwrapper installs other packages.

    pip install virtualenvwrapper
no pip.

    sudo apt-get install python-pip
I put this on wiki under Dinkum Project OS packages required.

  pip install virtualenvwrapper:
Installed /home/tc/projects/dinkum-blog/build/virtualenvwrapper/pbr-0.6-py2
  error: /usr/local/lib/python2.7/dist-packages/virtualenvwrapper: Permission denied
Storing complete log in /home/tc/.pip/pip.log

It left the build directory behind.
Looks like it needs to be root for installing into system directories.

      sudo pip install virtualenvwrapper

worked, cleaned up build directory.
Now diddle my .bashrc
http://virtualenvwrapper.readthedocs.org/en/latest/install.html says:
''''
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Devel
source /usr/local/bin/virtualenvwrapper.sh
````
http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/ says:
````
$ echo "source /usr/local/bin/virtualenvwrapper.sh" >> ~/.zshrc
````

There is a default of .virtualenvs built into virtualenvwrapper.sh.
That works for me.  There is no default for PROJECT_HOME, I want it to be
projects.
```
cat <<EOF >> ~/.bashrc

# virtualenvwrapper setup
export PROJECT_HOME=$HOME/projects
source /usr/local/bin/virtualenvwrapper.sh
EOF
source ~/.bashrc

```

virtualenv doesn't appear to have man pages.

Ubuntu 12.04.02LTS package: virtualenvwrapper

Made a wiki page for a cheat sheet:

https://github.com/dinkumsoftware/dinkum-blog/wiki/_new?wiki[name]=virtualenvwrapper

enuf for now.

All the wiki pages look good, but.... this file is managled.
I need to rethink whether I want to blog and/or do workin notes in markdown.
Maybe should revert to text? Or maybe stay in markdown but put everything
in a block?... think of these things.  It might help once I have emacs markdown.

2014-03-15 tc@DinkumSoftware.com 

Decided to "blog" in pure text instead of markdown.  Even when markdown becomes
second nature, i still adds an extra step of generating the markdown and
proofing it.  Only downside is (a) links aren't alive and (b) isn't as pretty
on the net.  A price to pay.

So move this file to dinkum-blog/dinkum-blog.txt
and fix up README.md to point to (a) blog and (b) wiki

2014-03-25 tc@DinkumSoftware.com 

Working on setting up servers and documenting the tips.

2016-05-08 tc@DinkumSoftware.com 

After a brief pause (2 yrs) getting back to publishing and moving all my
code from private subversion to github.  Hopefully I can get farther this
time.

I'm going to have one hopefully massive repo in github/dinkum for now.
Later I can package individucal pieces.  I'm keeping running working notes
(this file) in a separate repo only to avoid agony when I switch branches.
It avoids premature commits and/or stashes.

Decided to publish tc@DinkumSoftware.com as timestamp on files.  I thought
I always avoided it but, turns out it was in this file.  Couldn't face
setting up another email address and now I don't have to edit software
that I publish.  We'll see if email traffic builds with (a) real users or
(b) more likely spam.

I'm also setting up a new computer (casey) at the same time.
I'll transfer exist paper notes to casey-setup.txt.

Git setup <todo> move to dinkum

git config --global  user.name    <your name>
git config --global  user.email   <your email>
git config --global  core.editor   emacs
git config --global  merge.tool    meld
git config --global  diff.guitool  meld
git config --global  merge.cmd=meld $LOCAL $MERGED $REMOTE --output $MERGED
                                            # control windows presented on
                                            # a merge.
git config --global  difftool.prompt=false
git config --global  push.default matching  # Allow push to non-upstream
                                            #repo of same name as local
git config --global  credential.helper=cache --timeout=28800
                                            # How long git remembers passwd


<todo> kill the working notes wiki by moving content into dinkum.

Working on the private site to mount a bunch of usb disks.

Also got ssh timing out with:
tc@luna:~$ Write failed: Broken pipe

ServerAliveInterval
         Sets a timeout interval in seconds after which if no data has
         been received from the server, ssh(1) will send a message through
         the encrypted channel to request a response from the server.  The
         default is 0, indicating that these messages will not be sent to
         the server.  This option applies to protocol version 2 only.

ServerAliveCountMax

	by default this is set to 3. Therefore once the
	ServerAliveInterval has sent 3 small packs of info to your
	server it will then automatically log out. Setting it to 1200
	means this process will have to occur at least 1200 times. In
	short you should be connected at least more than 12 days.

Fixed via:
    /etc/ssh/ssh_config
        Host *
	# 3 days (2 min * 2160 tries)
	ServerAliveInterval  120
	ServerAliveCountMax 2160

2016-05-10
committed root-rsync-push

Looks like the FQDN doesn't work on my servers.
Looks like two possible fixes:
    /etc/resolv.conf    (or actually another file as it is built dynamically)
    or /etc/hosts       on the 127.0.1.1 line

Try:
    /etc/hosts
        127.0.1.1	bert   ===>
        127.0.1.1	bert.DinkumSoftware.com bert
                        # ORDER important. fqdn must come first

That worked.

But bert has a static IP.
Try:
    /etc/hosts
	50.78.19.59    bert.DinkumSoftware.com bert

That seemed to fail. Probably want to specify the IP somewhere in the network or the like.

Add 127 line to casey-setup and newly created server-setup

  On bert, the following fails
    sudo su
    ssh localhost

Because I have 

/etc/ssh/sshd-config
#PasswordAuthentication yes
PermitRootLogin without-password
#PermitRootLogin yes

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

I want:

PermitRootLogin                 without-password  # default
ChallengeResponseAuthentication no                # default
PasswordAuthentication          no		  # uncomment and edit yes=>no
UsePAM                          yes		  # default

IMPORTANT! You must ssh-copy-id FIRST!
So all I have to do is change is:
PasswordAuthentication          no		  # uncomment and edit yes=>no

# Allow ssh from tc to root
# drwx------ 2 tc tc 4096 May 10 16:43 /home/tc/.ssh
# -rw------- 1 tc tc  404 May 10 16:41 /home/tc/.ssh/authorized_keys

sudo mkdir -p                              /root/.ssh
sudo chmod 700                             /root/.ssh
sudo touch                                 /root/.ssh/authorized_keys
cat /home/tc/.ssh/id_rsa.pub | sudo tee -a /root/.ssh/authorized_keys > /dev/null
sudo chmod 600                             /root/.ssh/authorized_keys

Move this to casey-setup and server-setup

2015-05-18 tc@DinkumSoftware.com 
renamed root-rsync-mirror-push dinkum-root-rsync-mirror-push 


<todo> deploy it to luna, ernie, bert in /usr/local/sbin and test it.

2016-05-20

Installed wireshark.
Was about to put myself in wireshark group to avoid running it as root as suggested by
the documentation.... but there is no group wireshark.


https://ask.wireshark.org/questions/7523/ubuntu-machine-no-interfaces-listed
$ sudo apt-get install wireshark
$ sudo dpkg-reconfigure wireshark-common 
$ sudo usermod -a -G wireshark $USER
$ sudo reboot


2016-05-30
Python plotting librarys:
    matplotlib
    Pyqtgraph
    plot.ly


2016-06-12 tc@DinkumSoftware.com
Installed zenmap
    
2016-10-26

Back from summer of sailing.  Fixing up svn.
Installed subversion on casey.

Prior work in svn-recovery-2015-01-02.readme.txt

Try to checkout:
svn checkout svn+ssh://eth0.bert.dinkumsoftware.com/home/tc/network-services/svn svn-root
It worked.  I must have fixed it before. (dump before error, dump after error, load together)

Never easy....
The file count under active doesn't match via find -type f | wc -l
  active:
    casey:    23096		13G
    orphan:   42094		25G
  yesterday's news:
    casey:    937		9.2G		
    orphan:   not present


ssh ernie;cd /home/dinkum/opt
[tc@ernie opt]$ svnadmin verify svn
svnadmin: Reading one svndiff window read beyond the end of the representation

ssh bert; cd network-services
svnadmin verify svn
* Verified revision 1513.


<todo> clean up:
    ernie: /home/dinkum/opt/svn-recovery
    luna: ~data/svn-root
    bert: ~/network-services/svn ?

So... ernie did not get fixed, but yet I can check out
all of svn from ernie without an error.  Must be
a client side change on casey.... but serious difference in file size.


Check it out from bert
svn checkout svn+ssh://eth0.bert.dinkumsoftware.com/home/tc/network-services/svn/trunk svn-root-bert

2016-10-27 tc@DinkumSoftware.com

svn on bert and ernie differ.  Makes senses as there have been commits to ernie since then.
wait... everything is pointing to bert, including orphan.
So why did diff produce differences?

OK.... so call bert the gospel svn.
checkout both the active/yesterdays-news to casey:


tc@casey:~/projects$ svn checkout svn+ssh://eth0.bert.dinkumsoftware.com/home/tc/network-services/svn/trunk/active svn-root-active
		     svn checkout svn+ssh://eth0.bert.dinkumsoftware.com/home/tc/network-services/svn/trunk/yesterdays-news  svn-root-yesterdays-news

<fixed> External disk isn't working.  It gets an error when you to write to it


<todo> Rest of orphan to xfer:
       Pictures (desktop mostly), Ernie pictures to bert?
       emacs settings (compare against svn)
       bin (compare against svn/git)
       encrypted bin
       Desktop

<todo> check bert firewall setting, shut down all and switch to vpn.

2016-11-01 tc@DinkumSoftware.com

meganet is retiring cape.com.  I should use the opportunity to switch ISPs, but first I'll convert.
They are mapping:
    X@cape.com => X@meganet.net
    X@dinkumsoftware.com => Y@cape.com => Y@meganet.net
Servers:
    pop.meganet.net
    smtp.meganet.net
Same username/password
They are mapping X@dinkumsoftware.com addresses, so don't have to tell anyone externally.


General email plan: <todo>
x   get casey thunderbird email working with meganet addresses
x   switch my phone and tablet
        <todo>
        can't send mail from phone reliably.  Works sometimes. (tablet works ok).  There is an icon on failure.
x   tell debbie about the switch, url: meganet.net/cape-email-conversion for instructions
    transfer all of orphan email to casey (thunderbird to thunderbird)
    transfer some mailing lists
x   finish up orphan empty
    transfer all of nellie email to casey (disk swap)
    switch email providers: (maybe search archived mail for others)
        2 pop boxes
        tc:     vendor content nic-guru hello bcc jedgar
	debbie:
	Less than or equal to meganet charges
    set up imap server on bert

2016-11-09
Setting up emacs in git and casey/toms-pc

In svn:
    backups/tilde_tc/_DINKUM_DOT__.tc-toolbox
	             _DINKUM_DOT_.emacs
To git (dinkum):
   emacs
     README.txt
     bin/dinkum-install-tc-emacs
     tc-init.emacs
     tc-lisp/*.el

Deployed (by dinkum-install-tc-emacs)
   ~/.emacs.d/init.el    (load "~/.emacs.d/tc-init.emacs")
   ~/.emacs.d/tc-init.emacs
   ~/.emacs.d/tc-lisp/*.el


To cleanup:
    svn-root-active/backups/tilde_tc ==>
    svn-root-yesterdays-news/to-git/backups/tilde_tc

2016-11-10
Debugging emacs customizations.
Support name and directory changes
bug fix.  previous-window wasn't working.  Had to rename it to
tc-previous-window to avoid name collision with internal emacs function.

Function keys didn't work in emacs. emacs wasn't seeing F<n>.
Turns out on dell xps, F<n> does some system specific function.
If one holds down the Fn key while pressing F<n>, emacs sees it.
One can change the default behavior to make F<n> passed thru to
application the default and holding down the Fn key invokes the
hardware function. To alter:

    reboot and pound on F12
    Post Behavior
        FN Lock    CHECK    ; Fn+Esc toggles primary/secondary use of F<n>

        Lock Mode Disable/Standard        ; F<n> does media stuff
                                          ; Fn F<n> passed thru to application
        Lock Mode Disable/Secondard CHECK ; F<n> passed thru to application
                                          ; Fn F<n> required for media

date-stamp.el
    switched back to yyyy-mm-dd

Currently the user signature is hardwired into date-and-sign.el
Not a good solution. How about:

    environment variable: DINKUM_USER_EMAIL
    if it doesn't exist, use 
        environment variable: USER

NOTE WELL: These definitions must be in .profile (NOT .bashrc) otherwise
the gnome apps won't see them.  i.e. if emacs is launched from icon rather
than terminal... It won't see a DINKUM_USER_EMAIL created in .bashrc

<todo> Create the emacs readme.txt file
<todo> migrate the emacs out of subversion

2016-11-21 tc@dinkumsoftware.com

Found a nice bash script which automagically shortens the prompt when directory name is too long.

https://gist.github.com/ehamberg/1197104

Single bash function and alteration of PS definition.

Initial implementation (copy of script under ~) so don't need
sudo to install.

deployed:
~/.bashrc                      # Modified
~/.dinkum/bash/dinkum-bashrc   # Copied
               dynpath.bash    # Copied

git:
dinkum/bash/README.txt
            dinkum-bashrc
            dynpath.bash
            /bin/
               dinkum-install-bash-addons

Default setting
tom@toms-pc:~/projects/dinkum/bash$ echo $PS1
PS1:
\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$


tom@toms-pc /home/tom $ 
PS1:
\u@\h $(_dynpath) $

It's buggy. Get unprintable chars in the prompt.
Commit, and removed from .bashrc until one can debug it.

2016-11-22 tom@rail-pod.com

Debugging dynpath.
Explanation of what's there.
http://askubuntu.com/questions/404341/where-can-i-find-a-complete-reference-for-the-ps1-variable
\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$
    \w is current working directory
    the first \w shows up in terminal title
    the 2nd \w should be replaced with _dynpath.


Still get unprintable chars when it chops the path.
Wants to output special char: ...
    Horizontal ellipsis
    &#133
    &#x85
    octal: 205
    &hellip

Could NOT get them to print.
don't even know what character set they are

Fixed a ~ problem.
Replaced ... with -
code goes into infinite loop when get deep.

2016-11-24 tc@DinkumSoftware.com

Wanted to put google contacts in chrome web launch page.
Well according to:
    http://www.computerworld.com/article/2475118/internet/how-to-customize-google-s-new-web-app-launcher.html

You have to download an app from chrome  web store:
    app Launcher Customizer for Google

    http://redirect.viglink.com/?format=go&jsonp=vglnk_148001401034511&key=f6962bb9927d153082cdc6b572121599&libId=ivwq0rze010113ap000DAbjj22pm9&loc=http%3A%2F%2Fwww.computerworld.com%2Farticle%2F2475118%2Finternet%2Fhow-to-customize-google-s-new-web-app-launcher.html&v=1&out=https%3A%2F%2Fchrome.google.com%2Fwebstore%2Fdetail%2Fapp-launcher-customizer-f%2Fponjkmladgjfjgllmhnkhgbgocdigcjm&ref=https%3A%2F%2Fwww.google.com%2F&title=How%20to%20customize%20Google%27s%20new%20Web%20app%20launcher%20%7C%20Computerworld&txt=App%20Launcher%20Customizer%20for%20Google

I installed it, but it didn't work., It says:
    Please keep in mind the extension doesn't modify the Chrome App Launcher, only the Google App Launcher
I deleted it.

It lets you configure the apps on a GOOGLE site that has 3x3 bar on right side of page.
which already has contacts in it.
Could NOT find a way to configure the 3x3 Apps button in google chrome on left side of page.
punt.


2016-11-25 tc@DinkumSoftware.com

Tried the scanner at home:
    homephotosmart.dinkumsoftware.com
    10.23.0.150
It used to work on prior orphan ubuntu 14.04

sane-find-scanner

It can't find the scanner.
Some ubuntu help said run hp-setup.
All that did was set up a printer. (I think). I cancelled out.

There's a way to serve a local scanner that sane will find.
That's not what I have, I have scanner directly on network via wifi.
Try it anyway.
    
etc/sane.d/net.conf is the config file.
uncomment and lower connect_time to 15
add 10.23.0.150 to bottom of file.

As kind of expected, didn't work.

Another link with same problem
https://answers.launchpad.net/ubuntu/+question/230672
Said to upgrade hplib and run it.

I guess I should try the hplib that I have and see
if that fixes it.  Will probably make a new printer.

hp-setup
    network/ethernet
    Advanced Settings
    Manual discovery
    homephotosmart.dinkumsoftware.com

    unclick Fax setup
    Printername HomePhotosmart_C2700

created a system print.
printed a test page sucessfully printed test page from hp-setup

simple scan found the scanner. ... joy joy

Delete the other printer
and rename new one  home-photosmart
Printed from an app and it works.

2016-11-27 tc@DinkumSoftware.com

Go back and fix up prompt shorting code.

First get the infrastructure right:

git:
dinkum/
    bash-addons/
        README.txt
        dinkum-bashrc
        bin/
            dinkum-install-bash-addons
        dynpath/
            README.txt
            bin/
                dinkum-install-dynpath
                dinkum-dynpath.bash

deployed:
~/.bashrc                                      # Modified
~/.dinkum/bash-addons/bin/
                          dinkum-bashrc        #  Copied
                     README.txt                #  Copied
                     dynpath/
                         README.txt            #  Copied
                         bin/
                             dinkum-dynpath.bash  # Copied

Get the files renamed and in the right place in git.
diverted to git/bin/git-root-dir

2016-11-28 tc@DinkumSoftware.com

<todo> make and install-tc to put . at head of the path.
<todo> emacs: separate out tc versus other useful functions.
              Maybe thin out overwritten keys
              Maybe document what was in the key overwritten.

Wrote and tested git-root-dir

Wrote, tested, and commited dinkum-install-dynpath

General flow of what to do next:
    debug dynpath()
    integrate with bash-addons
    refactor dinkum-install-dynpath

<todo> understand 'man gitrevisions' and summarize in git-cheatsheet.

2016-12-06 tom@rail-pod.com

<done>  disappear dinkum/bash
        rename dinkum/bash-addons ==> bash

2016-12-09 tc@DinkumSoftware.com

Debugging dynpath....
Sort of seems to work.

Was having a hardtime testing it under git, because
code assumes ~/.dinkum/... I was running under ~projects/dinkum

So I need a way to run under git, even if .dinkum is installed.

Flow:
  ~/.bashrc  : if -e .dinkum/bin/dinkum-bashrc then source it


To test:
DINKUM_DEBUGGING_FROM_GIT=1 bash

dinkum-bashrc examines DINKUM_DEBUGGING_FROM_GIT and points things
to gitrootdir instead of ~/.dinkum
<todo> document this someplace.

So...
x  push ae4efbdbb996f4643b84a17d6f1e54c8e70c19ba
x  shuffle files around
   dinkum-install-from-git          <<< Resume here. Mostly done
      Does dinkum-bashrc only
  Debug dynflow under git
  install dynflow and test under .dinkum


2016-12-11 tc@DinkumSoftware.com
Diversion.  Straighten out the backups.

mounted on bert:
    /mnt/1-t          ; 1 terabyte, vertical black
    /mnt/half-t-top   ; 500G, horizontal gray, on top
    /mnt/molly-bottom ; 500G, horizontal gray, on bottom
                      ; her old backup, read-only

Get errors:

/mnt/1-t
Dec 11 09:32:19 bert kernel: [18299982.457598] EXT4-fs warning (device sde1): __ext4_read_dirblock:901: error reading directory block (ino 34766849, block 0)

Got errors on the other ones also.

I suspect the usb hub.
Unplug the hub ; plug 1-t directly into bert.
Seems ok.
Ran fsck on it.  Saw no errors.  Did brief read and seemed ok.

put half-t-top on other usb port and fsck it.


Bert has two usbs... so leave molly unplugged and plug in
1-5 and half-t-top

Seems ok.




/mnt/half-t-top   ; 500G, horizontal gray, on top
                  ; used: 117G 
    should-be-deleted-but-cant               ; DELETED
                                             ; had some orphan fedora7 2013 stuff
    final-root-rsync-push                    ; DELETED
        orphan-fedora7-2013-01-07-partial.1
        orphan-fedora7-2013-01-07-partial.2
        orphan-fedora7-2014-01-07
                                             ; empty, 500G available


/mnt/1-t          ; 1 terabyte, vertical black
                  ; used: df: 689G  du: 641G

* ===> deleteable


lost-email-related-backups
        orphan-with-lost-tc-email-2009-12-07

manual-backups
    * blinky
    * henrietta
        henrietta-final-manual-backup-2007dec16
    * luna
        luna-final-after-noboot-2011-10-20
        luna-final-fc1-2008-07-23
    molly

svn-recovery *
        svnadmin-dump-0-to-1057.dump

topdir-root-rsync-push
    bert       2015-01-05 16:18:57 newer, cpy into com/dinkumsoftware/
    luna
    orphan     2016-06-12 22:51:40 newr, cpy into com/dinkumsoftware/
    com/dinkumsoftware/
        bert   2011-10-13 19:23:34.
        ernie  2016-05-10 17:19:05
        nellie 2014-03-23 19:59:30  &FINAL&

I suspect the two different ones are when switched to ubuntu
doesn't report fully qualified domain name.
In dinkum-root-rsync-push: need to change:
   hostname ==> hostname --fqdn

Run it on casey to ~tc/play
sudo <path-to-program>/dinkum-root-rsync-pushd localhost /home/tc/play


on casey: with 
    /etc/ssh/sshdconfig:
    PermitRootLogin yes
    PasswordAuthentication yes

 ssh root@localhost    # Works (because pushed the key)
 sudo ssh localhost fails  # asks for passwd n times an dies
                           # suspect security beyond ssh
                           # is preventing root login's


root had no ssh key.
Try duplicating tc's
*   sudo su
    cd /root/.ssh
    ln -s ~tc/.ssh/id_rsa
    ln -s ~tc/.ssh/id_rsa.pub

works.... but it asks for pass phrase.

    sudo su
    cd /root/.ssh
    cp --preserve=mode ~tc/.ssh/id_rsa* .

Still asks for pass phrase.
Go back to symlinks when working, don't forgot to document in casey setup <done>

   sudo su
   eval ($ssh-agent)
   ssh-add

https://ubuntuforums.org/archive/index.php/t-845490.html
OK, I'm now understanding what you're trying to do. Try this:

1) Add "env_keep=SSH_AUTH_SOCK" to your Defaults in /etc/sudoers.
So you would run "sudo visudo" and change your Defaults line to look something like:


    Defaults	!lecture,tty_tickets,!fqdn,env_keep=SSH_AUTH_SOCK


The above is based on the Defaults line from my Hardy system. Yours may look slightly different.

2) Use "ssh-add" to add keys to your keyring as your normal user ID (no need for sudo at this stage).

3) Execute your "sudo rsync ..." (or "sudo ssh ..." or whatever) and it should get the keys from your normal ssh-agent process and not prompt you for your passphrase.

What's going on here is that SSH_AUTH_SOCK is the environment variable that tells SSH processes (or rsync running over SSH) how to communicate with the ssh-agent process and get keys. sudo normally suppresses environment variables like this when you run a command like rsync via sudo, but the env_keep setting tells sudo to propagate this variable into the environment of the process you're running.

I suspect that if things were working for you on earlier releases of Ubuntu it was because the sudo program in the default package was compiled with env_reset option turned off by default. But it's most definitely turned on in my Hardy system at least:

Put it etc/sudoers.d/
    dinkum-allow-sudo-ssh

That fixed it. <todo> move this file into dinkum somewhere.
Took out the symbolic links.



/mnt/1-t/topdir-root-rsync-push/com/dinkumsoftware/
    bert      done
    ernie     done
    luna      punt
    orphan    done move to final
    casey     started.


It was going so well.  It failed on bert because tc has
no ssh credentials there. bert is unique because disks
are mounted there.  Question: should I gen a new key pair
or copy over the one from casey.

Certainly safer to make a new key-pair.

2016-12-29 tc@DinkumSoftware.com

Got dinkum-install-from-git working (non-recursively)

Now I need to get .bashrc diddled.  Need to move dynpath stuff into its one file.


2017-01-29 tom@rail-pod.com

Life went bad.  On development machine the window spread quit working and I diddled either tweak tool or
unity tweak tool.  Now I couldn't book ehe machine from gui interface.  Infinte loop.  Had to ssh in after
some difficulty.

Jan 29 16:23:18 casey kernel: [ 2894.784071] compiz[5683]: segfault at 7f0079656b5f ip 00007f0079656b5f sp 00007ffcb6ac5258 error 14 in icon-theme.cache[7f97119f5000+260b000]

Jan 29 15:54:54 casey gnome-session[2461]: WARNING: Application 'compiz.desktop' killed by signal 11
Jan 29 15:54:54 casey gnome-session[2461]: WARNING: App 'compiz.desktop' respawning too quickly
Jan 29 15:54:54 casey gnome-session[2461]: CRITICAL: We failed, but the fail whale is dead. Sorry....

fixes from:
http://askubuntu.com/questions/590561/ubuntu-14-04-login-loop-problem
1. Install and run unity reset.
     wget https://launchpad.net/~amith/+archive/ubuntutools/+build/3910667/+files/unity-reset_0.1-8_all.deb
     sudo apt-get install dconf-tools
     dpkg --install unity-reset_0.1-8_all.deb
FAILED: lots of error messages

unity-tweak-tool --reset-unity
    similar error messages.

Mostly complaining about no X11 $DISPLAY.  I'm running these ssh'ed in.

dbus-launch
unity-reset

compiz still crashing

Got to reinstall the desktop
sudo apt-get install --reinstall ubuntu-desktop
FAILED

rm ~/.XAuthority .ICEauthority
FAILED
Jan 29 16:33:05 casey kernel: [   30.807864] traps: compiz[2326] general protection ip:7fc7a87f7ecf sp:7ffc15f770c8 error:0 in libscale.so[7fc7a87db000+27000

Made a new user and could log in just fine.

2017-01-30 tom@rail-pod.com

Rather than try to fix it, make a new user and copy over ~tc

1. deluser foo (1000:1000)
   confirm /home/foo still around
   rm -/rf /home/foo

2. 
  adduser backdoor (same password)  1000:1000
  sudo usermod -aG sudo username

3. ssh in to backdoor
   confirm gui boot
   confirm sudo usage

4. deluser tc 1001:1001

5. mv /home/tc  /home/home-tc-before-deleting

6. 
  adduser tc (same password) should be 1001:1001
  sudo usermod -aG sudo username

7/ verify can ssh in
   verify boots
   mv /home/home-tc-before-deleting ~tc/home-tc-before-deleting

8. mv all non .* files from home-tc-before-deleting to ~
   For dot files mv:
       .ssh .emacs

9. go thru casey setup.  DO NOT do tweaks.


NOTE: in home-tc-before-deleting found a root owned file:
      ~/.cache/dconf
than tc couldn't read.  It had a single entry user.
Deleted it, but tc still wouldn't boot.

<punt> delete ~backdoor/tc-before-deleting 45G

New tc account seems up and running.
Rather than reconfigure Thunderbird, just copied in the profile:
    ~/.thunderbird
It seemed to work.  I probably ought to take this opportunity to get
all the mail off of nellie/orphan:
    mail
    address books
Then I can finish up the retirement of nellie/orphan.
There are various addons that should make it easier.

2017-02-06 tc@DinkumSoftware.com

Finish up the retirement of nellie/orphan:
x   move files over
x   move mail over
       x mail
       x address lists
    move bookmarks over

x   Get ernies files to bert. done.
x   moved rsync backups to final.ernie.fedora.


Ernie's eth0 wasn't up.... hum?  Ignore, will be upgrading to ubuntu soon.
apt-get upgrade'd bert/luna.

Bert stores everything:
    ~tc/network-services
        svn

do-release-upgrade
    luna, didn't want to run under ssh.
    Do it native in the basement.


Moved the mail with thunderbird addon:
     ImportExportTools 
     https://freeshell.de/~kaosmos/mboximport-en.html
Kindof klunky but worked.
Export: export folder with subfolders (with structure)
Import: "import mbox file" ; with its/their subdirectory.
        select the mbox file (NOT *.sbd directory)

<done> move this dinkum/thunderbird/thunderbird-tips.txt
       along with downloaded adds-on.

       .thunderbird/pref.js
           has *.mab info
           don't edit manualy while running, be overwritten
           Edit Preferences Config_Editor will let you edit it.

2017-02-13 tc@DinkumSoftware.com
Not a good day. 1.5 Tbytes of two usb external disks had errors.
Going to throw them away. In trying to revive 2T ethernet Western
Digital external disk, Kept hitting one bug after the other.
Made a static interface that wouldn'work using "create-static-interface".
took me 30 minutes to figure out you have to restart network-manager
so it knows to ignore the new device.  Fixed it in dinkum-create-static-interface.

New problem is that wireshark and zenmap complain if started via sudo:

tc@casey:/etc/network/interfaces.d$ sudo wireshark &
[1] 20540
tc@casey:/etc/network/interfaces.d$ error: XDG_RUNTIME_DIR not set in the environment.

(wireshark:20541): Gtk-WARNING **: cannot open display: 

Diverted to writing dinkum-emacs-use-for-sudodit.
Turns out all I had to do was define EDITOR. Oh well.

Commented out ENV_RESET in sudoers and that didn't fix it.
This did:
    Defaults	!env_reset

Back to wd-2TB.
Got it set to static.
This mounts it.
sudo mount -v -t nfs 10.23.2.100:/nfs/backups /mnt/wd-2TB/ -o nolock

without the -o
mount.nfs: Either use '-o nolock' to keep locks local, or start statd.

       lock / nolock  Selects whether to use the NLM sideband protocol to lock files on the server.
                      If neither option is specified (or if lock is specified), NLM locking is used
                      for this mount point.  When using the nolock option,  applications  can  lock
                      files,  but such locks provide exclusion only against other applications run‐
                      ning on the same client.  Remote  applications  are  not  affected  by  these
                      locks.
rpc.statd needs to run
    sudo update-rc.d rpcbind defaults
    reboot
I may have worked anyway if I rebooted.
but works now.

Put it on bert:
sudo apt-get install rpcbind nfs-common

But bert is in wrong sub-net.  Move bert to servers subnet: 10.23.2.52
x   change bert: /etc/interfaces
x   Change heimdall 1:1 NAT (not tested)
    Change nameservice. <todo> after it's stable.
x   move the plug and reboot.


sigh....
wd-2B mounted, but when I did a sudo cp ....
it complained about couldn't chown.
The nfs server is root squashing.
I need to specify no_root_squash in /etc/exports
on server side.  Didn't see how to do that.

Looks I can ssh in and do it.... oh boy.

2017-03-03 tc@DinkumSoftware.com

logitech webcams quit working.
both of them.  system sees them:
Mar  3 11:42:18 casey kernel: [25006.430882] usb 2-1: new full-speed USB device number 14 using xhci_hcd
Mar  3 11:42:18 casey kernel: [25006.447801] usb 2-1: New USB device found, idVendor=046d, idProduct=08dd
Mar  3 11:42:18 casey kernel: [25006.447810] usb 2-1: New USB device strings: Mfr=0, Product=0, SerialNumber=0
Mar  3 11:42:18 casey kernel: [25006.448068] usb 2-1: ep 0x82 - rounding interval to 64 microframes, ep desc says 80 microframes
Mar  3 11:42:18 casey kernel: [25006.448492] gspca_main: gspca_zc3xx-2.14.0 probing 046d:08dd
Mar  3 11:42:18 casey kernel: [25006.448743] input: gspca_zc3xx as /devices/pci0000:00/0000:00:14.0/usb2/2-1/input/input43
Mar  3 11:42:18 casey mtp-probe: checking bus 2, device 14: "/sys/devices/pci0000:00/0000:00:14.0/usb2/2-1"
Mar  3 11:42:18 casey mtp-probe: bus: 2, device: 14 was not an MTP device
Mar  3 11:42:18 casey rtkit-daemon[1816]: Successfully made thread 15630 of process 2323 (n/a) owned by '1001' RT at priority 5.
Mar  3 11:42:18 casey rtkit-daemon[1816]: Supervising 4 threads of 1 processes of 1 users.

model:
08dd  QuickCam for Notebooks

lsusb sees it.
skype sees it.  Have to go to options to select camera.

shows up as /dev/video1


2019-04-12 tc@Dinkumsoftware.com  Back to it after a while.

My main laptop(casey) got sick and I replaced it with Dell XPS 13, model 9380
running ubuntu 18.04

While waiting for shipment I tried to mount a World Edition 2 terra-byte
drive via nfs and have root read/write to it.  Quite a battle, more on this
later.

Housework.
I collected all the setup up instructions for casey in this directory
in:
    configs/casey     ; old
           /gosnold  ; new



2019-04-30 tc@DinkumSoftware.com

Gosnold is generally configured.  setup up documented in
    repo:dinkum-working-notes/configs/*


Walked in casey .bashrc changes to gosnold.

I'd like to target my efforts to develop a "software publishing machine".
Collection of open source tools to make publishing good software easy and
bad software hard.

Need to access where I am so I know what to do next.
repo:dinkum

├── backups                                 ; shell script to backup whole system
│   └── bin
│       └── dinkum-root-rsync-push
├── bash
│   ├── bash-cheatsheet.txt                 ; move to doc .. <done>
│   ├── bin
│   │   └── dinkum-install-bash-addons      ; maybe alters ~/.bashrc
                                            ; copies scripts to ~/.dinkum/bash/

│   ├── dynpath                             ; needs to be debugged
│   │   ├── bin
│   │   │   ├── dinkum-dynpath.bash
│   │   │   └── dinkum-install-dynpath
│   │   └── README.txt
│   └── README.txt
├── bin
│   ├── dinkum-are-files-identical         ; mostly shell scripts to support 
│   ├── dinkum-bashrc                      ;      dinkum-install-from-git
│   ├── dinkum-git-root-dir
│   ├── dinkum-install-from-git            ; highest level install program
│   ├── dinkum-install-helper-cp-files
│   ├── dinkum-install-helper-cp-std-files
│   └── dinkum-is-git-file
├── can-utils                              ; documentation for can-utils
│   ├── bin                                
│   │   ├── dinkum-can-utils-generate-doc  ; shell sripts (require can-utils installed)
│   │   └── dinkum-can-utils-list-programs
│   └── doc
│       ├── can-utils-program-documentation.txt      ; Output from above programs
│       ├── can-utils-programs
│       └── can-utils-programs-with-no-runtime-help
├── emacs
│   ├── bin
│   │   ├── dinkum-emacs-use-for-sudoedit   ; configures sudoedit to use emacs
│   │   └── dinkum-install-tc-emacs         ; locally install tc's emacs cusomization not generic
│   ├── emacs-cheatsheet.txt                ; move to doc
│   ├── tc-init.emacs                       ; emacs run code               not generic
│   └── tc-lisp                             ; ditto                        not generic
│       ├── date-and-sign.el
│       ├── date-stamp.el
│       ├── save-all-buffers.el
│       ├── scroll-one.el
│       ├── tc-diddle-background-color.emacs
│       └── tc-key-mappings.emacs
├── git
│   ├── bin
│   │   ├── dinkum-git-configure-for-tc                          ; does getconfig's, not generic
│   │   ├── dinkum-git-root-dir -> ../../bin/dinkum-git-root-dir
│   │   └── dinkum-is-git-file -> ../../bin/dinkum-is-git-file
│   ├── git-cheatsheet.txt
│   └── README.txt
├── LICENSE
├── network-utils                              # tools to manipulate local network
│   ├── bin
│   │   └── dinkum-create-static-interface
│   └── busted
│       └── tell-NetworkManager-to-not-use-a-device
├── NOTICE
├── project                                    # Future
│   └── recipe-528877-1.py                     # Good template for python executable
├── README.md                      # High level doc
├── sudoko                                     # Mostly working python solver
│   └── bin
│       └── sudoko.py
├── thunderbird
│   └── thunderbird-tips.txt                   # move to doc?
├── utils                                      # shell scripts  <done> sort out sym links
│   └── bin
│       ├── dinkum-are-files-identical -> ../../bin/dinkum-are-files-identical
│       └── dinkum-find-newest-file-in
└── winpdb                                     # program to allow winpdb to run under python 3
    ├── bin                                    # requires winpdb installed.
    │   └── winpdb3
    └── python3-reqd-patches
        ├── rpdb2.py.original
        ├── rpdb2.py.patched
        ├── sha1.rpdb2.py.original
        └── sha1.rpdb2.py.patched

Ok... here's the short term plan.

1. Convert dinkum-install-from-git to python
    Don't go too far down the rabbit hole,
    Do steps manually in lieu of refactoring or writing a program

2. Get dinkum-uninstall to work

3. Get tc-install.py to work.
$  Get tc-remove.py to work

Where do I put source and the like.
All the python library source will be in:
    dinkum/python/dinkum/a/b/*.py    # In package library code
           python/bin/dinkum-*.py    # Is executable

    dinkum/bin ; sym links.e.g.
          dinkum-* ==> ../python/bin/dinkum-*.py

So fix up the repo.
    Move documentation to doc  <done>
    Mark DINKUM_NOT_TO_PUBLISH <done>
    
<done> Figure out what to do with dinkum/bin/*

dinkum-install-from-git
    #    Confirm we are under git control
    #    Create ~/.dinkum and copy over ../bin/* ../README.* 
    #    Copy doc/* to doc|Doc/dinkum-doc
    #    diddle ~/.bashrc to source ~/.dinkum/bin/dinkum-bashrc

<moved> dinkum-install-bash-addons ????? obsolete?

<moved> write git condition checker.
       CONVENTIONS enforcement
           sym links exist
       All req'd files README etc exist

python: Switched template for optparse to argparse

<done> look at docopt.  Nice package. Takes a usage line (doc string)
       and generates args[] and options in one function call.
       Only down side is it is NOT in the standard library.
       Start using it later.

<done> Figure out whether to just copy the damn git ?
<done> Why not allow to just run from git?  That's just really
       for me or anyone else that has git.

2019-05-01 tc@DinkumSoftware.com
      dinkum-install-from-git        copies everything to publish from git.
      dinkum-uninstall-from-git      

      dinkum-config-to-run-from-git    Just points things to git.
      dinkum-unconfig-to-run-from-git

      tc-install                        Dinkum stuff + specials
      tc-remove


dinkum-install-from-git
    #    Confirm we are under git control
    #    Create ~/.dinkum and copy over ../bin/* ../README.* 
    #    Copy doc/* to doc|Doc/dinkum-doc
    #    diddle ~/.bashrc to source ~/.dinkum/bin/dinkum-bashrc

<moved> put version # in docstring via format() so don't have
enter it twice.  Verify docstring still works.

<moved> retrieve these from git      
dinkum-git-root-dir -> ../../bin/dinkum-git-root-dir
dinkum-is-git-file -> ../../bin/dinkum-is-git-file

dist_utils.copy_tree() seems buggy.
     it is copying <x>/dinkum/git/bin/foo  to .dinkum/git-copy-root/bin
     Also doesn't work if destination exists.
     They have a create_tree() which will precreate the directories,
     seems like a kludge.

I started with shutil.copytree()
  but didn't like it because of odd destination directory requirements.
  
Go back to that.
It doesn't have verbosity switch. 
x  commit to local git
x  get it to work
x  sort out verbosity/dry-run from cmd line?
no If it is too messy, wrap it with dinkum.utils.file_utils.tree_copy
   Diddle bashrc profile?
   see todo's above.

2019-05-02 tc@DinkumSoftware.com

works, but has to start with clean slate.
Need to remove git-copy-root recursively

<punt> add remove-git switch

Probably write dinkum-uninstall-from-git
  which main() calls dinkum.package.install.uninstall_from_git

So convert existing code to dinkum.package.install.install_from_git() ... done

mv dinkum-install-from-git.py from python/bin to python/dinkum/package/bin/dinkum-install-from-git.py
and diddle symbolic link in dinkum/bin.. done

<moved> ~/dinkum/python/dinkum/FOO ==> ~/dinkum/FOO

code remove_install_from_git
exe  dinkum-remove-install-from-git

On to --verbose and --dry-run
   booleans
   if verbose announces what doing
   if dry-run never copy files (forces verbose=T)

<done> do files then dirs

Next: make a cleanup pass on the code.

Figure out PYTHONPATH early in the game and
    refactor some support code? how find it.

<done> ~/dinkum/python/dinkum/FOO ==> ~/dinkum/FOO

<done> put version # in docstring via format() so don't have
       enter it twice.  Verify docstring still works.

<punt> retrieve these from git   they were in utils/bin
       dinkum-git-root-dir -> ../../bin/dinkum-git-root-dir
       dinkum-is-git-file -> ../../bin/dinkum-is-git-file


<fail> f'string? to avoid entering defs twice in docstrings
<done> history out of docstring

Then write: dinkum-remove-install-from-git
Then on to bashrc/profile


2019-05-03 tc@DinkumSoftware.com

pydoc looks nice.
<done> Remove manual table of contents and replace it
       with words to effect of run pydoc
<done> pydoc -g needs package python-tk

It looks like there is no way even in python III to insert stuff in a docstring.
Only suggestion was modify __doc__ at run time.

That seems to work for pydoc.

<moved> tc@DinkumSoftware.com => dinkumsoftware.com/tc
       Set the server up.
       
       
2019-05-05 tc@DinkumSoftware.com

<done> don't install *.~ and *.pyc files
won't help with recursive dir copies.

Refactored in-line code into find_dinkum_git_root_dir()
Named exceptions and cleaned up exception printout.

I still have dinkum_git_root_dir() in dinkum-install-from-git.py
because it has to run before PYTHONPATH is set up.

I could make it special and put a symbolic link dinkum/bin where
it could be found by default.



2019-05-06 tc@DinkumSoftware.com

<done> dinkum-install-from-git announce if replacing if previously installed.

<moved> write dinkum-uninstall-from-git

<moved> consider different naming tc- ? for exes for me only.

Altered dinkum-install-from-git to only copy tracked git files.
Ran into a mess with shutil.copytree.  Couldn't support dry run.

Got to write my own.... sigh.
Follow their model on ignoring file.

Put code in dinkum.file.utils.copy.py

<moved> rename dinkum-install-from-git ==> dinkum-install-from-local-git
       check remove naming is consistent.
2019-05-07 tc@DinkumSoftware.com

<done> refactor mkdir into file.utils.py
<done> add symlinks arg to my copy tree

2019-05-08 tc@DinkumSoftware.com
Collected todo's

<todo> rename dinkum-install-from-git ==> dinkum-install-from-local-git
       check remove naming is consistent.
<todo> Print a line at the end of dinkum-install-from-git that the git can be removed.
       Print a line on how to remove it.
<todo> write dinkum-uninstall-from-git
<todo> write dinkum-etags:
       cd $DINKUM
       etags $(find . -name '*'.py | grep -v TEMPLATES)
<todo> consider different naming tc- ? for exes for me only.
<todo> tc@DinkumSoftware.com => dinkumsoftware.com/tc
       Set the server up.
<todo> pydoc -g needs package python-tk
<todo> write git condition checker.
       CONVENTIONS enforcement
           sym links exist
       All req'd files README etc exist
<todo> dinkum-install-bash-addons ????? obsolete?


2019-05-14 tc@DinkumSoftware.com

scanner wasn't recognized
prior work (search upward in this file) said
run hp-setup.  Won't run under ubuntu 18.04:

hp-setup
    HP Linux Imaging and Printing System (ver. 3.17.10)
    Printer/Fax Setup Utility ver. 9.0
    <snip>
    error: No module named 'PyQt5'

Ran without the gui:
    hp-setup -i 10.23.0.150  # IP# of hp printer

It created printer.  It created fax.
Test print from hp-setup worked.

simple scan found the printer and scanning worked.

Survived restart.  Still sees the scanner.
Need to delete fax and one of the printers (I now have two).
I would think I want to delete the oldest one in case the scanner
is somehow related to the printer. [next time, delete the printer first]

Couldn't really tell which was oldest printer.  Guessed and:
   Via system menu(not cups) I removed one printer and fax.
   couldn't figure out how to give root passwd to cups.

2019-11-07 tc@DinkumSoftware.com
6 months later... back to writing code
Revisiting kata sudoku_solver.

Hit and fixed some emacs problems.  I was always annoyed and troubled
by emacs shells not reading .bashrc.  This prevented PYTHONPATH from
getting passed to shells.  This fixes it in:

    ;; get emacs shells to use bash and read ~/.bashrc
    ;; Thanks to
    ;; https://stackoverflow.com/questions/12224909/is-there-a-way-to-get-my-emacs-to-recognize-my-bash-aliases-and-custom-functions/12229404#12229404
    (setq shell-file-name "bash")
    (setq shell-command-switch "-ic")

Now of course ^X^E (compile) doesn't read .bashrc
Only fix I found was:
    ^X^E bash -ic dinkum/whatever/foo.py

2019-11-08 tc@DinkumSoftware.com
Only workaround I found for compile in emacs is:
(compile) bash -ic <command>


2019-11-13 tc

Using sudoku python code to firm up my python development environment.

Explored git tools a bit:
    git-standup    command line tool to show synopis of last days
                   git work.  Seemed to just work.  Time frame
                   is programable.  Packaged for ubuntu

    GUIs:
        gitg        Lots of information displayed.  I've used it in
                    the past and it works. Packaged for ubuntu
        git-cola    Seemed intuitive in 5 minutes usage.  Includes
                    git-dag. Packaged for ubuntu
        git-dag     git history viewer. Packaged for ubuntu

    debuggers:
    See https://wiki.python.org/moin/PythonDebuggingTools
        pud         command line debugger. 
                    Packaged for ubuntu

        pudb        "gui" using a terminal.  I found it non-intuitive in
                    10 minutes usage.  Probably works just fine.
                    Packaged for ubuntu

<punt.winpdb failed> get winpdb to work https://pypi.org/project/winpdb-reborn/
<done> publish this in dinkum/git/doc/git-tools.txt
       remove prior work in git-cheatsheet.txt


<later><todo> sort out emacs tags

2019-11-14 tc
Try new winpdb that supposedly works.
https://pypi.org/project/winpdb-reborn/

sudo apt remove winpdb
sudo python -m pip install winpdb-reborn
     /usr/bin/python: No module named pip

2019-11-15 tc

Looks like there is an apt packaged pip (python2) AND pip3
    python-pip  python-pip3

Ubuntu 18.04 has both python 2 and 3 installed.  python 2 is
the default because they don't want to break a lot of python 2 code.
You can invoke python 3 via python3 pip3 --or-- use sudo update-alternatives
to switch globally.  My programs call for python3 in the initial #! line.
My code uses python3.

Many pip installation guides call for using a python virtual environment.
    venv       https://docs.python.org/3/library/venv.html
    virtualenv https://packaging.python.org/key_projects/#virtualenv

venv is from python.  A strong argument for it.

https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-programming-environment-on-ubuntu-18-04-quickstart
    sudo apt install -y python3-venv
-y isn't documented, but suspected in means always say yes.... a dangerous thing with sudo

go for it:
   sudo apt install python3-venv

It did NOT apt install pip3, but appears may have it in virtual environment

Where do I want to create venv directory.  venv docs suggest ~/.venv
Do I want it in ~/.dinkum/.venv ?    no, no need to make it hidden
                                     humans aren't poking around .dinkum very much
Do I want it in ~/.dinkum/venv  ?    yes

   python3 -m venv $HOME/.dinkum/venv
   

<todo> there is some upper level tool that sits on top of venv and does more
       check it out.

source $HOME/.dinkum/venv ==>
    (venv) tc@gosnold:~/.dinkum/venv$

That would argue for making venv variable: dinkum-venv or dinkum.  Only downside is
it chews up screen width.  Let's go with dinkum-venv

   deactivate
   rm -rf $HOME/.dinkum/venv
   python3 -m venv $HOME/.dinkum/dinkum-venv

source $HOME/.dinkum/dinkum-venv/bin/activate ==>
    (dinkum-venv) tc@gosnold:~/.dinkum/venv$

Seems to work.
(dinkum-venv) tc@gosnold:~$ python --version
Python 3.6.8
(dinkum-venv) tc@gosnold:~$ pip --version
pip 9.0.1 from /home/tc/.dinkum/dinkum-venv/lib/python3.6/site-packages (python 3.6)

My python with #!/usr/bin/env python3 seems to work.

Diddle my .bashrc:
export PATH="$PATH:$HOME/.dinkum/dinkum-venv/bin"
source activate


<todo> require virtual environment?
       https://docs.python-guide.org/dev/pip-virtualenv/

Back to installing a debugger (which is where this started)

https://pypi.org/project/winpdb-reborn/ says:
    python -m pip install winpdb-reborn

Inside a (dinku-venv)
but don't I want pip3 ? just try it
    sudo python -m pip install winpdb-reborn
pfailed:
    /usr/bin/python: No module named pip
try sudo python -m pip install winpdb-reborn

a ha!  but sudo forks a shell that isn't in a virtual environment.
I've got a pip from tc shell, but not root shell.
My is picked up from dinkum-venv/bin which remained on the path
after a deactivate.

The bug was I set dinkum-venv/bin on the path.  Don't want to do that,
merely activate the virtual environment.

Now I don't see pip, which is good as it matches root.
Now I want apt install pip and pip3

tc@gosnold:~$ apt list | grep ^python-pip
python-pip/bionic-updates,bionic-updates 9.0.1-2.3~ubuntu1.18.04.1 all
python-pip-whl/bionic-updates,bionic-updates,now 9.0.1-2.3~ubuntu1.18.04.1 all [installed,automatic]

    sudo apt install python-pip python3-pip

A very, very big install.

Ok, back to debugger.....
    sudo python -m pip install winpdb-reborn

The directory '/home/tc/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
The directory '/home/tc/.cache/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.

Collecting winpdb-reborn
  Downloading https://files.pythonhosted.org/packages/37/4a/57d0d62b67625f4fb568313ca8e79a82d2bc05f58cb7782c334960c04422/winpdb_reborn-1.5.0-py2-none-any.whl (142kB)
    100% |████████████████████████████████| 143kB 2.2MB/s 
Installing collected packages: winpdb-reborn
Successfully installed winpdb-reborn-1.5.0

should be :  sudo -H python -m pip install winpdb-reborn

It generally worked in both dinkum-venv and bash.  Didn't quite get it to
what I wanted to, but that was operator unfamiarity... and that's misspelled.

2019-11-16 tc
winpdb: I can set breakpoints, but locals don't show up.
I wonder if it's python 2 vs 3 problem.
When I tried to test that, got problems launching it.
When I switched the source code #! line from python3 => python2... still no locals.

See https://github.com/bluebird75/winpdb/issues/15
Seems to imply winpdb itself only runs under python 2, but the
underly rpdb2.py does.  hum

For test, move my code to python 2 and see if it works.
Try this mostly "perfect" back conversion tool.
https://pypi.org/project/3to2/

note: venv seems to only work python3

virtualenv does both.

But I did a simple test case and don't see local variables
under python2 [a shell NOT a dinkum-venv]

2019-11-17 tc

Sigh.. I've lost track off how deep the stack is pushed.

It appears venv only supports python 3.  virtualenv which I have used
before probably supports python 2.  On ubuntu if I work in a non-virtual
shell, python2 is the default... but pip installs probably require root and/or
mess with system libraries.  So if I want a python2 virtual environment, I
have to install virtualenv.  That's not a big deal, I've done it in the past.
I might want a fresh install of winpdb in python 2 environment and/or
maybe put it back from ubuntu apt package.  There is also some patches
in dinkum/winpdb, but I think I tried them.

There is a "namespace not working" in winpdb-reborn. Mimics my symptons,
but no answers.  Pointed to old original winpdb bug:
    https://sourceforge.net/p/winpdb/discussion/485189/thread/2689b421/

winpdb --debug foo.py

produces a similar set of errors about global name 'sets' is not defined.
sets was deprecated since version 2.6.  I'm running version 2.7.  Hence
the difficulty. Comes from rpdb2.py

I haven't got python 2.6 on my system and doesn't look to be available as
a package from ubuntu.

Someone may have written a replacement package.
https://github.com/enthought/Python-2.7.3/blob/master/Lib/sets.py

Couple of choices:
    fix rpdb2.py
    splice in a sets to set layer
    run under python 2.6 in virtual environment
    Go back and look at ubuntu winpdb with patches.
    used a different debugger:
        pydebug
        pydev    It is featured as a 'Python IDE' plugin for Eclipse

Let's try other debuggers.  Deinstall winpdb
      
    (dinkum-venv) tc@gosnold:~/play$ pip -V
    pip 9.0.1 from /home/tc/.dinkum/dinkum-venv/lib/python3.6/site-packages (python 3.6)

    tc@gosnold:~/play$ pip -V
    pip 9.0.1 from /usr/lib/python2.7/dist-packages (python 2.7)

hum... both dinkum-venv & raw shell have winpdb => /usr/local/bin/winpdb
I apparently installed winpdb-reborn in raw shell.

    tc@gosnold:~/play$ sudo pip --verbose uninstall winpdb-reborn
Seemed to work.  Only two python files:

Look at other debuggers.
<done> purge winpdb & patches from dinkum

pydebug: link points to just source code in wayback machine, some archival facility of web pages.
         not promising.

pydev     It is only an eclipse plug-in.  Means have to install eclipse (which I need to do anyway
          for app development [i think]).  


OK, further down the rabbit hole.  Install eclipse and pydev.
Do all the work in a raw python 2.7 shell.  diddle bash.rc to NOT activate dinkum-venv

eclipse:
    ubuntu gui lists: eclipse no version from 2019-03 from snapcrafters
                      eclipse 3.8.1-11 
                                            
    google pages show:
        use snap installer
        use eclipse oxygen installer
        download from eclipse

    eclipse says use their downloader

Current eclipse is:
    2019-09
    3.8.1-11 June 5, 2012

I don't really care how old it is.  I can upgrade later if req'd.
    sudo apt install eclipse
    87 new packages

2019-11-18 tc
eclipse install went ok.


sigh... well, maybe not....started it:
An error has occurred.  See the log file
/home/tc/.eclipse/org.eclipse.platform_3.8_155965261/configuration/1574085740489.log

!SESSION Mon Nov 18 09:02:20 EST 2019 ------------------------------------------
!ENTRY org.eclipse.equinox.launcher 4 0 2019-11-18 09:02:20.510
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.ClassNotFoundException: org.eclipse.core.runtime.adaptor.EclipseStarter
	at java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:471)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:588)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:626)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1414)

google says:
https://stackoverflow.com/questions/50423322/eclipse-ubuntu-18-04-installation-java-lang-classnotfoundexception

Just went through same issue with Ubuntu 18.04. Don't know specific answer but reinstalling directly from eclipse.org (C/C++ installer) eclipse-cpp-oxygen-3a-linux-gtk-x86_64.tar.gz went well. No more issues. Installing at Ubuntu 16.04, no issues found with synaptic installation either. So, just use eclipse installer in newest Ubuntu.
    
https://stackoverflow.com/questions/3412617/java-lang-classnotfoundexception-org-eclipse-core-runtime-adaptor-eclipsestarte
various talk about editting the eclipse config file.

let's try install directly from eclipse
      2004  sudo apt remove eclipse
      2005  sudo apt autoremove

eclipse.org/downloads
download tools/eclipse/eclipse-inst-linux64.tar.gz
Couldn't find instructions on eclipse.org

Found: https://www.eclipse.org/downloads/packages/installer
       download eclipse-inst-linux64.tar.gz
       unzip it to eclipse-installer
       help available at: file://localhost/home/tc/tools/eclipse/eclipse-installer/readme/readme_eclipse.html

       tc@gosnold:~/tools/eclipse/eclipse-installer$ ./eclipse-inst 
       Eclipse Installer:
       The Eclipse Installer executable launcher no longer supports running with GTK + 2.x. Continuing using GTK+ 3.x.
       Installed in ~/eclipse
         eclipse ide for java developers
       Seemed to run, but hello world project didn't match instructions... just punted.

       Couldn't add eclipse icon to tool bar.  Fix via:
       https://askubuntu.com/questions/1082340/how-to-add-eclipse-to-favorites
       Created ~/.local/share/applications/.desktop
       worked!

       .bashrc: Added $HOME/tc/eclipse/java-2019-09/eclipse
       
Tried git on eclipse and it seemed to get stuck... later
pydev seemed to install ok.
tomorrow, configure interpreter and take it for a spin.

2019-11-19 tc

Configured pydev for python 3.6.  See http://www.pydev.org/manual_101_interpreter.html
started trying to create code at http://www.pydev.org/manual_101_first_module.html
delete pydev-first-time-project

Finally got pydev running with debugger.
It is running directly from ~/projects/dinkum/....

Found at least one bug in replace_substr_at().  Move it to it's own module and run test code.

eclipse: Turn on auto-refresh <done> put this in eclipse install-notes.txt or somewhere
         windows=>preferences check both "refresh on access" and "refresh using native hooks or polling"
         <eclipse> put all step/run keys into checksheet
         <done> checksheet .gitignore .project .pydevproject


emacs: wanted alt-x [global]-display-linenumbers-mode.  Only available in ver 26+, running 25.2.2
       From https://www.emacswiki.org/emacs/LineNumbers
       For older emacs: M-x linum-mode
       <done> put this in emacs-cheatsheet

<done> put all step/run keys into eclipse-cheatsheet.txt

<done> Clean up:
       git-tools.txt
       git-cheatsheet.txt

2019-11-22 tc

Cleaned up the documentation clean up.

Back to sudoku
Added block separator lines to sudoku
Trying to add cell numbers and got wierd
results trying to debug it in eclipse.
break points didn't show up on executable code.
some local variables were missing.  sigh.
did an interium commit.
       
2019-11-23 tc

The answer to above.  You have to terminate and
relaunch the debug session, even from changes
with eclipse.

<todo> bug, emacs ^R overides debug "run to line" ^R
       see if can remap "run to line" to say ESC-r or Alt-R
       or unused function key

Got blocks and cells labelled.

The worksheet is actually done.  But here's some stuff
to do next:
<done>
x   revisit label positions
x   refactor into sudoku.pretty_print.PrintLabeledBoard
x   put in test code for blank board
x   put in values as 2x2    11
                            11 note: decided on just single value
x move the cell numbers to left 1 space, overwriting the separater.
x label block on top and bottom

2019-11-24 tc

Debugging Board constructor.
<done> move content into board.py, rcb.py, and cell.py
<moved> add row/blk/blk to Cell
<moved> test all_neighbors.  remove iteration.  Build sets and remove self.
<moved> move all sample boards to dinkum.sudoku.sample_boards.py with answers.

2019-11-25 tc

Finally... sudoku.py Unit tests pass.
couple of stupid bugs.

commit sudoku.py and get labeled_printer to work.

diddled format a bit and got all test to run.

Put the examples in labeled_printer and I think we are done with it.   Later.

Moving Block/RCB/Cell into their own files.  Ran into nested import
woes as Cell references Board, mostly for constants.  Should move
those definitions into the package import __init__.py
Query: Should those variables be all upper case ?
       A brief google scan and PEP 8 didn't provide any answers.
       I think I'll follow that convention.... but tomorrow.
do cell and work way "up" to Board.

All unit tests pass.  Run down todo's in the code
from cell ... sudoku  Don't forget the ones above.

2019-11-26 tc

Rethought the plan:

<done> move all sample boards to dinkum.sudoku.sample_boards.py with answers.
<done> added sample_board.currently_solvable_boards boards with solutions and
       we know we can solve.
<done> add board name
<done> rename sudoku.py => kata.py, 
<moved> write dinkum-sudoku-solve <know-board-name> do timings printout here
<moved> introduce timings

<done> add row/blk/blk to Cell
<done> remove iteration.  Build sets and remove self. test all_neighbors?  
<done> add board[row][col] returning a cell

<moved> add rcb iterator
       revisit all neighbors
       and block constructor.

To run all the unit tests
python3 -m unittest discover -v -p '*'.py
<done> put in cheatsheet and/or
<done> write bash script ?


From the top of sudoku.py
###################
# <done>Change RCB.rcb to RCB.cells
# <moved>Add rcb_type as RCB member and constructor
# <done> Test pre-solved
# <moved> print out nonsolvabe puzzles
# <moved> print out timings
# <punt> Have some set indicate there are cells with single possible values
###################

2019-11-28 tc

Wierdness.  board.py test code passes from command line, shell under emacs,
testrunner with named file. e.g.

These run:
(dinkum-venv) tc@gosnold:~/projects/dinkum/sudoku$ python -m board
(dinkum-venv) tc@gosnold:~/projects/dinkum/sudoku$ ./board.py
(dinkum-venv) tc@gosnold:~/projects/dinkum/sudoku$ python3 -m unittest board.py
python3 -m unittest discover  -v --failfast -p  board.py

YET THIS FAILS:
(dinkum-venv) tc@gosnold:~/projects/dinkum/sudoku$ python3 -m unittest discover  --failfast -p  '*'.py
..................E
======================================================================
ERROR: test_solving_boards (dinkum.sudoku.board.Test_board)
test a bunch of sample boards
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/tc/projects/dinkum/sudoku/board.py", line 380, in test_solving_boards
for sp in all_solved_puzzles :
NameError: name 'all_solved_puzzles' is not defined
----------------------------------------------------------------------
Ran 19 tests in 0.039s
FAILED (errors=1)

eh?

maybe python2 sneaking in?

2019-11-30 tc
commit what I have to "interium sudoku: at test runner discovery bug"

Turned out to be a cyclic import problem.  Not quite sure how it showed
up differently in discover but direct... but that fixed it.

Added a board description.  Commit interium sudoku.  Introduced board description.  All unit tests pass.
Back to todo list.

https://www.codewars.com/kata/hard-sudoku-solver-1
Rename sudoku.py to kata.py

Knocked off a bunch of todo's

<done> add rcb iterator
<done> revisit all neighbors and block constructor.

<done>Add rcb_type as RCB member and constructor


<done> write dinkum-sudoku-solve <know-board-name> do timings printout here
         print out nonsolvabe puzzles
         print out timings

<done> introduce timings

2019-12-01 tc
Plowing thru the todo list.
Done all but bin/dinkum_sudoku_solve.py
git commit

On to dinkum_sudoku_solve_known [puzzle_name]

<done> fixup usage/help/docstring in dinkum_sudoku_solve_known

2019-12-02 tc

<done> change example in labeled_printer.py

puzzle won't solve, nothing obvious.
Put in some globe puzzles.  I'm tired of silly lists.
Let Board constructor take a string of numbers.

2019-12-03 tc

Allowed string input as well as [] of row[] as input to Board constructor.
Put in a globe mon and sat puzzle.  mon was solved, sat not

2019-12-04 tc

Based on globe sat. Next solution technique:

Each rcb keeps {} of possible_unsolved_cells_by_value.
   Indexed by possible_value (1-9) 

   value is set of unsolved cells in the rcb that have
   possible_value in it's possible_values   

If a possible_unsolved_cells_by_value[X] has only one
member, that cell can be set.

<done> introduce timing and print it out in dinkum_sudoku_solve_known printout

<done> Document (or store) solve times in .dinkum/sudoku/known_puzzle_solve_times

       add dinkum_sudoku_solve_known printout -u, --update_times to write it
       store as yaml or pickle?

<done> changes rcbs to touple

<done> add possible_unsolved_cells_by_value
       add rcb.remove_from_possibles(cell) ==> rcb.cell_was_set()
       

<punt> move cell.set.neighbor iteration to rcb.remove_from_possibles(cell)
        make rcb.remove_from_possibles(cell) return [] of cells to set

<done> add board.solve_rcbs_with_single_possible_value_solution


pre_solved          :   Solved! after  0.861 usecs
real_easy           :   Solved! after  0.615 usecs
globe_mon_2019_12_02:   Solved! after  0.382 usecs
empty               : UNSOLVED! after  9.948 usecs
globe_sat_2019_11_02: UNSOLVED! after 25.563 usecs
kato_puzzle         : UNSOLVED! after 22.064 usecs

Looked at pickle, only problem is it stores as binary.

Tried to save the solve times in yaml.  Probably the
right format, but requires pip install ... not now

Looked at JSON, but it can't encode a Board.

So pickle it is

Figure out state structure.
Initially thinking ~/.dinkum/package/package/package/module/filename
                             dinkum

Maybe better  ~/.dinkum/something/package/package/package/module/filename
                                  dinkum
nah.... 

Structure on gosnold is ~/projects/dinkum/sudoku/whatever.py
state should be         ~/.dinkum/dinkum/sudoku/whatever/<filename>

Got diverted with writing test code for __init__.py and where to put it.
<done> conventions python test code at end of source.  __init__.py
       test code at end of __init__.py works fine.

<done> migrate code in dinkum/__init__.py to dinkum.utils.state_space.py

2019-12-05 tc

Turns out you can put the unit test code at the end of an __init__.py
and everything seems to work out fine.

Well now that I tought out the state_space design.... turns out sudoku
isn't gonna use it.  It should store the pickled timing data in
.../dinkum/sudoku/test_data/ so it is under git control and shows
up during an install.

Go ahead an finish the state_space implementation.

2019-12-06 tc

After a hard day+ of coding I finished the state_space implementation.

Back to pickling sudoku timing data.... but tomorrow.
All the sudoku code passes

The state of git
	modified:   PTAGS
	modified:   __init__.py
	modified:   python/doc/python-cheatsheet.txt
	modified:   sudoku/bin/dinkum_sudoku_solve_known.py
	modified:   sudoku/board.py
	modified:   sudoku/labeled_printer.py
	modified:   sudoku/test_data/test_puzzles.py


2019-12-07 tc

Back to sudoku.  I finished the timing work.
The solve times are so fast < 1usec and so jittery.  I had
to average them like 10K times to get even moderate meaning
in the timing results.  committed all.


Not sure this algorithm makes sense.
save code in ~/btrsh/saved-sudoku.py

2019-12-08 tc

Algoritm does make sense:
    each rgb has:
      unsolved_value_possibles.
          {} of sets of cells
          key: cell value
          value: set of cells in rgb that have value as a possibility

      RCB.cell_was_set(cell) removes cell from all unsolved_value_possibles

      Board.solve_rcbs_with_single_possible_value_solution() looks
      for any RCB whose unsolved_value_possibles[X] only has 1 cell
      and sets it

<moved> rename dinkum_print_sudoku_worksheet.py ==> dinkum_sudoku_print_worksheet
<moved> make it use cell.str_value()


Implemented Board.solve_rcbs_with_single_possible_value_solution()
It solved a whooping 3 additional cells in globe_sat_2019_11_02
sigh.....

git commit -m "Sudoku interium Implemented Board.solve_rcbs_with_single_possible_value_solution()"

Next, look at unsolved and see how I do.

2019-12-09 tc

<moved> I need to implement: reduce_possibles_from_matching_cells()

It searches every rcb for pairs (and triples, quads) of unsolved cells
that all have the same possible value that is unique to that rcb,
i.e. no other cell in the rcb has that value as a possible.

Then remove that value from possibles of any other rcb's they have in
common.

<done> But first, add some statistics:
<done>     number of passes
<punt>     number of unsolved cells
<later>    who set the cells.

<done> Store these in a pickled file along
with the timing.
x   create class SudokuStats and moving timing there
x   rename the pickle file and read/write routines
x    change dinkum_sudoku_solve_known to:
x         print SudoKuStats on unsolved
<punt> suppress the timings and multiple runs
             unless --timings is present.
             It is so jittery, it is not of much use.
x       Change improvement to change and flip signs

<punt> speed up Board(board) constructor.  Now running about 2ms

2019-12-10 tc

The board construction time isn't that bad.  It was the solution of
all the known puzzles in import of test_puzzles.  Moved that to
test code.

Change board constructor to use prior board name in the copy constructor.

Cleaned up the dinkum_sudoku_solve_known printout.

<moved> make Stats.str() iterate thru vars() rather than hard coding member names.
Back to actually trying to solve the puzzle.

I need to implement: 
It searches every rcb for pairs (and triples, quads) of unsolved cells
that all have the same possible value that is unique to that rcb,
i.e. no other cell in the rcb has that value as a possible.

Then remove that value from possibles of any other rcb's they have in
common.

Have it implemented.  It's crashing with
  File "/home/tc/projects/dinkum/sudoku/cell.py", line 121, in set
    assert value in self.possible_values

Add -n, --num_to_average to dinkum_sudoku_solve_known to reduce the clutter.

<done> look at kludge in RCB.remove_value_from_possibles() that don't
       remove if it's the only one.  Should set it or tell someone to set it.

<done> when bug is fixed, grep all the code for #### as some printouts will
       go away when bug is fixed.

2019-12-11 tc

<moved> validity check --num_to_average

<moved> move write up below to sudoku/__init__.py
       Give a broad overview in {board, rcb, cell}.py doc strings

OK.  Did more damage than good last night.  Was too tired, but
think I have the solution:

Cell has:
    set(value)        returns Set of CellsToSet's
      set itself: value, possibles=Set()
      returns Board.a_cell_was_set(self)

    remove_from_possibles(value) returns Set of CellsToSet's
      It's ok if value not in possibles, return Set()
      removes value from self.possibles
      if removal would result in only one possible value
         returns Set( CellsToSet(self, value)
      else return Set()

    is_solved()
    __str__()
    detailed_str()
    sanity_check(?)


RCB has:
    a_cell_was_set(cell) returns Set(CellsToSet)
        removes cell from unsolved_cells
        removes cell from unsolved_value_possibles
            if removal would result in only one possible
            cell for that value... that cell is added to
            returned Set(CellsToSet)

        remove_from_possibles(cell.value)
            adding to Set(CellsToSet)

        return Set(CellsToSet)

    remove_from_possibles(value)
        iterates thru unsolved_cells
             Cell.remove_from_possibles(cell.value)
             accumulates set(CellsToSet)

        Rebuilds unsolved_value_possibles

        If there remains only a single Cell that can provide
        a value, that Cell and the value to set it to is
        added to the returned set of CellToSet's

        
    is_solved()
    __str__()
    detailed_str()
    sanity_check()
 


Board has:
    a_cell_was_set(cell)        returns Set(CellsToSet)
        removes cell from unsolved_cells
        iterates thru rcbs:
            RCB.a_cell_was_set(cell)
            accumulates CellsToSet for return

    set_cells( Set(Set of CellsToSet's) return # set?
      Cell.set() those cells
      accumulate CellsToSet 
      recurse on any CellsToSet until nothing to set

      is_solved()
      __str__()
      detailed_str()
      sanity_check()

    solve()
        while (not self.is_solved()) :
            solve_cells_with_single_possible_value()
            solve_rcbs_with_single_possible_value_solution()
            solve_by_reducing_possibles_from_matching_cells()
      
            Fail if none of the above set a cell
    
    # All of these True if they set any cells
    # ??? instead return the # of cells set ???
    # They internally produce a Set(CellsToSet)
    # They Board.set_cells() those cells
    solve_cells_with_single_possible_value()
        produce initial Set by finding all cells
        with only one possible value
    solve_rcbs_with_single_possible_value_solution()
       produce initial Set by finding any RCB that an
       unsolved value that can only be provided a
       single cell
    solve_by_reducing_possibles_from_matching_cells()
       produce initial Set by searching all RCBs
       for pairs(and triples, quads) of Cells
       that share a possible that is unique to
       those cells, i.e. can't be supplied by
       any other cell in the RCB.

       For any of those pairs/triple/quads that
       are in the same rcb, call RCB.remove_from_possibles
       accumulating CellsToSet

       call Board.set_cells() with those CellsToSet

OK.. this looks reasonable.
Implentation order:
    1. Get code to pass unit tests and solve_known
       with solve_by_reducing_possibles_from_matching_cells()
       commented out
x         a. snapshot sudoku/ ~/btrsh/sudoku-busted-2019-12-11
x         b. get all the debug output removed
x         c. comment out solve_by_reducing_possibles_from_matching_cells()
x         d. unit tests/solve should work

x   2. git commit "prior to final solution HA!"

    3. implement Cell changes.  stub non-existent {Board,RCB}
x      Make it handle board==NULL so
NO      Unit test all functions.  "need more funcs"
NO     solve_known works          "need more funcs"
x      git commit "Cell implemented"

    4. implement RCB changes.
       Unit test all functions.  
       solve_known works
       git commit "RCB implemented"

    5. implement Board changes.
       Unit test all functions.  
       solve_known works
       git commit "Board implemented"

    6. Switch 2 existing solve_XXX() that work to new scheme
       All unit tests pass.  solve_known works
       git commit "initial integration"

    7. Turn on solve_by_reducing_possibles_from_matching_cells()
       See where we go.

--------------------------------
Removing debuging code:
	modified:   bin/dinkum_sudoku_solve_known.py
                all changes are keepers for --num_to_average
                commit "implemented num_to_average"
	modified:   board.py
	modified:   cell.py
	modified:   rcb.py
    removed the debugging out to above
    all unit tests pass and dinkum_...solve_known runs
    --update the times
    
    
All the Cell work is done and passes unit tests.
Other unit tests:
AttributeError: 'Board' object has no attribute 'a_cell_was_set'

2019-12-12 tc

Slight change of plans.  All the unit tests and solve don't
work.  Need additional functions.

git commit "Cell implemented"

On to rcb....
RCB has:
x    a_cell_was_set(cell) returns Set(CellsToSet)
x        removes cell from unsolved_cells
x        removes cell from other unsolved_value_possibles
x            if removal would result in only one possible
x            cell for that value... cell is added to
x            returned Set(CellsToSet)
x        remove_from_possibles(cell.value)
x            adding to Set(CellsToSet)
x
x        return Set(CellsToSet)

    remove_from_possibles(value)
        iterates thru unsolved_cells
             Cell.remove_from_possibles(cell.value)
             accumulates set(CellsToSet)

        Rebuilds unsolved_value_possibles

        If there remains only a single Cell that can provide
        a value, that Cell and the value to set it to is
        added to the returned set of CellToSet's

        return set of CellsToSet's


<moved> unsolved_cells_with_common_unique_values(self, match_size)
       make return {} keyed by value.
<done> rcb.py prune unused funcs

<done> rcb.unsolved_value_possibles.  Currently treating solved entris as empty sets.
       Be faster to delete them.
       In any event, clean up rcb.detailed_str() to only print non-empty sets.
       which if fix prior, should just work.

2019-12-13 tc

<moved> to many words named set.  set() ==> solve() everywhere (doc to)
<done> RCB.__str__() ==> [1 2 3 .. ]

rcb unit tests are failing on CellToSet() equals test, as test only for same object instead
of cell values.  Making CellToSet a subclass of tuple should fix it.  That was
indeed it, but had to jump thru hoops to inherit from tuple.  Had to implement
a __new__() which forces call of __init__()

The {} rcb.unsolved_value_possibles has an empty set for unsolved values.
Instead it should only have entires (as it is a dictionary) for unsolved values
It started out as list.

before I do this commit cell and rcb.
    "prior to taking empty sets from rcb.unsolved_value_possibles.
    unit_tests:cell passes, rcb: print fails"

<done> rcb.sanity_check()  len(unsolved_values) == len(unsolved_cells)
                           unsolved+solved == all_cell_values
                           unsolved+solved == all cells in rcb

<done>
x   implement and unit test
x             solved_values
x             unsolved_values
x             solved_cells()
punt, too hard to do   update sanity_check and add to unit tests

git commit "solved/unsolved cells/values"

x   remove_from_possibles check for no possibility for value
x   remove_from_possibles add except_cells as reqd arg
x   remove_from_possibles unit test

2019-12-14 tc

Finally, rcb.py passes unit tests.  I removed the complicated test because was
too hard set up the RCB in right state.  Depend on test_a_cell_was_set.

commit "rcb/cell passes unit tests"

Consolidate the todo's
When stable:
    <moved> to many words named set.  set() ==> solve() everywhere (doc to)
    <moved> validity check --num_to_average
    <moved> dinkum_sudoku_solve_known .. print one-lines in real-time if not verbose
    <moved> move write up below to sudoku/__init__.py
           Give a broad overview in {board, rcb, cell}.py doc strings
    <moved> maybe? make Stats.str() iterate thru vars() rather than hard coding member names.
    <moved> rename dinkum_print_sudoku_worksheet.py ==> dinkum_sudoku_print_worksheet
                make it use cell.str_value()

<moved> unsolved_cells_with_common_unique_values(self, match_size)
       make return {} keyed by value.

On to betting block.py to pass unit tests
and then finally back to solving puzzles

Make the changes in board.py.  All it's unit tests pass.
Get a unit test failurel test_puzzles trying to solve a board.
commit "board passes unit tests

All the unit tests pass (joy)
Solvabiltiy remains the same as before.
Timings/pass changed:

(dinkum-venv) tc@gosnold:~/projects/dinkum/sudoku$ bin/dinkum_sudoku_solve_known.py
pre_solved           solved      11.9 usecs(-20.5%) 1 passes(0)  
real_easy            solved      30.5 usecs(-29.0%) 1 passes(0)  
globe_mon_2019_12_02 solved     547.4 usecs(-19.5%) 5 passes(2)  
empty                UNSOLVED!   32.4 usecs(  4.8%) 1 passes(0)  
globe_sat_2019_11_02 UNSOLVED!   28.4 usecs(-77.8%) 1 passes(-1) 
kato_puzzle          UNSOLVED!   28.3 usecs(-64.0%) 1 passes(-1) 

updated it

Interesting... the # of passes for the monday globe vary from 4 to 5.
Must the the order that sets() return stuff varies.

git commit "all unit tests pass.  Some solvabity as before"

Ok.  Now:
x   implement Board.solve_cells( set(CellToSet)

x   unit test it

x   convert solve_rcbs_with_single_possible_value_solution(self)
   to use Cell.solve_cells()

x   same for solve_cells_with_single_possible_value

   commit

   fix up solve_rcbs_with_single_possible_value_solution(self)

2019-12-16 tc

Board.solve_cells() done

convert to use Board.solve_cells():
        solve_rcbs_with_single_possible_value_solution(self)
        solve_cells_with_single_possible_value

commit

Still doesn't solve globe saturday.
Found anonomly in cells 0,1 should
be a pair of 7's in block 0 and not

Increase rcb.detailed_str() to show cell possibles

blk#0:
   Cell#s:    0  1  2  9 10 11 18 19 20
   Indexs:    0  1  2  3  4  5  6  7  8
   Values:    _  _  1  9  _  _  _  _  _
   Possibles:
              3  3        3  3  3  3  3        
              4  4  
              6  6        6  6
   Cell index possibles for unsolved values:
      2:  0 1 4 5 6 7 8
      3:  0 1 4 5 6 7 8
      4:  0 1 4 5 6 7 8
      5:  0 1 4 5 6 7 8
      6:  0 1 4 5 6 7 8
      7:  0 1 4 5 6 7 8
      8:  0 1 4 5 6 7 8

Done.

Now the saturday globe has bad board state
in row 0.

partial solution:
 0 0 1  6 0 3  0 0 0
 9 0 0  0 4 7  0 1 0
 0 0 0  0 0 0  7 0 0

 3 9 0  0 2 5  6 0 0
 0 0 0  0 0 0  0 0 0
 0 0 4  3 6 0  0 5 9

 0 0 3  0 0 0  0 0 0
 0 4 0  1 7 0  0 0 6
 0 0 0  2 0 6  5 0 0

row#0:
      Cell#s:  0  1  2  3  4  5  6  7  8
      Indexs:  0  1  2  3  4  5  6  7  8
      Values:  _  _  1  6  _  3  _  _  _
   Possibles:
               2  2              2  2  2
               4                 4  4  4
               5  5        5           5
               7  7                     
               8  8        8     8  8  8
                           9     9  9   
   Cell index possibles for unsolved values:
      2:  0 1 4 6 7 8
      4:  0 1 4 6 7 8
      5:  0 1 4 6 7 8
      7:  0 1 4 6 7 8
      8:  0 1 4 6 7 8
      9:  0 1 4 6 7 8

The 7's in row1/blk1 and row1/blk2 should
wiple out all the 7s in row 1,2.
The cell.possibles reflect this.
the rcb unsolved_values doesn't

The various Cell.set(7) should:
    sets value, empties possible_values

    call board.a_cell_was_set()

board.a_cell_was_set(cell)
    removes cell from unsolved
    iterate thru solved_cell.rcbs calling
            rcb.a_cell_was_set


rcb.a_cell_was_set(cell)
    removes cell from unsolved_cells
            del unsolved_value_possibles[set_cell.value]
            iterates thru unsolved_value_possibles removing set_cell


is that the call order of rcb for set_cell
   row.a_cell_was_set()
   col.a_cell_was_set()
   blk.a_cell_was_set()

If the blk eliminates a possible value in row...
It's too late because row.a_cell_was_set calculated unsolved_value_possibles
before other cells in the row possibles were changed.

One fix:
    rcb.a_cell_was_set sets unsolved_value_possibles to None
        and does NOT rebuild it

    board.a_cell_was_set()
        iterates thru rcb's call
            rcb.rebuild_unsolved_value_possibles

this is not a great solution.
copy partial work to ~/btrsh/sudoku-2019-12-16

	modified:   bin/dinkum_sudoku_solve_known.py
	modified:   board.py
	modified:   rcb.py
	modified:   test_data/test_puzzles.py

When back to where I was.  all unit tests pass and
solve_known solves 3 and can't solve globe saturday.

Let's trace it again.
The various Cell.set(7) should:
    sets value, empties possible_values

    call board.a_cell_was_set()

board.a_cell_was_set(cell)
    removes cell from unsolved
    iterate thru solved_cell.rcbs calling
            rcb.a_cell_was_set


rcb.a_cell_was_set(cell)
    removes cell from unsolved_cells
    del unsolved_value_possibles[set_cell.value]
    iterates thru unsolved_value_possibles removing set_cell

nobody calls rcb.remove from possibles()

Should be:
rcb.a_cell_was_set(set_cell):
    remove cell from unsolved_cells
    del unsolved_value_possibles[set_cell.value]
    self.remove_from_possibles(set_cell.value, set_cell)


Globe puzzle solved!
kato still not.

commit "sat globe solved"


2019-12-18 tc

<todo> check out
       codimension
       http://codimension.org/documentation/visualization-technology/python-code-visualization.html
       IDE: Side by side editor and graphic representation of the same.
       Looks kind of nice.
       Easy install to virtual environment:
              $ cd
              $ virtualenv -p python3 venvp3

              $ source ~/venvp3/bin/activate
              (venvp3) $ pip install wheel
              (venvp3) $ pip install codimension

2019-12-19 tc

Went thru LibreCad manual up to dimensioning.

Back to sudoku.

Still can't solve kato puzzle.  I couldn't solve it by hand.

<moved> one possibility to add is Cell.remove_from_possibles() and
have it call Board.a_cells_possibles_change => RCB.a_cells_possibles_changed.
Allow RO access to Cell.possibles and require Cell.remove_from_possibles()
to change.  Implement this by turning Cell.possibles into frozenset.

Not sure it will actually help in solvability, can't hurt other than
extending execution time.

In mean time, clean up the todo's

When stable:
    <done> to many words named set.  set() ==> solve() everywhere (doc to)
    <done> validity check --num_to_average
    <done> dinkum_sudoku_solve_known .. print one-lines in real-time if not verbose

    <todo> move write up below to sudoku/__init__.py
           Give a broad overview in {board, rcb, cell}.py doc strings

    <punt> maybe? make Stats.str() iterate thru vars() rather than hard coding member names.
    <done> rename dinkum_print_sudoku_worksheet.py ==> dinkum_sudoku_print_worksheet
                make it use cell.str_value()

<punt> unsolved_cells_with_common_unique_values(self, match_size)
       make return {} keyed by value.

too many words named set.  set() ==> solve() everywhere (doc to)
x   cell
x   rcb
x   board
x    stats
x    labeled_printer
x    __init__
    




old flow: =================================================================================

    Cell.solve()
      set value
      empties possible_values
                              => Board.a_cell_was_solved()   
                                   remove from unsolved_cells
                                          
                                                              ==> RCB.a_cell_was_solved
                                                                    for unsolved_cells
                                                                      Cell.remove_from_possibles
                                                                    rebuild unsolved_value_possibles

    Cell.remove_from_possibles
      adjusts possible_values


    RCB.remove_from_possibles
       for unsolved_cells
                                        => Cell.remove_from_possibles
       rebuild unsolved_value_possibles

New Flow  =================================================================================
     Cell.solve()
      set value
      empties possible_values
                              => Board.a_cell_was_solved(cell)   
                                   remove from unsolved_cells
                                   for cell's UNSOLVED rcbs                                          
                                                              ==> RCB.a_cell_was_solved(cell)
                                                                    remove from unsolved
                                                                    remove_from_possibles(cell.value)

    Cell.remove_from_possibles
      adjusts possible_values
                           => Board.a_cells_possibles_changed(cell)
                              for cell's unsolved rcbs
                                                 ==> RCB.a_cells_possibles_changed(cell)
                                                          adjust unsolved_value_possibles    


    RCB.remove_from_possibles(value, except_cells)
       for unsolved_cells except except_cells
                                        => Cell.remove_from_possibles(value)
                                             adjust possible values
                                                                   ==> Board.a_cells_possibles_changed(cell)
                                                                          for unsolved rcbs
                                                                                 => RCB.a_cells_possibles_changed(cell)
                                                                                       adjust unsolved_value_possibles
 =================================================================================
<punt> rcb.removed_from_possibles() remove REQUIREMENT of except_cells
       I think the prior failure was due to unit test 

<done> Board only calls unsolved rcb stuff

<done> Implement the new flow
one possibility to add is Cell.remove_from_possibles() and
have it call Board.a_cells_possibles_change => RCB.a_cells_possibles_changed.
Allow RO access to Cell.possibles and require Cell.remove_from_possibles()
to change.  Implement this by turning Cell.possibles into frozenset.

<done> remove all the rebuilds.

<done> solve_possibles_from_matching_cells(self) :
         Remove any other possibles from matched Cells other than
         the value they have in common.

<done> rcb.py line 182
    assert [ cell in self for cell in except_cells ]

<punt> rcb:remove_from_possibles() is passed a cell which is removed
       as supplying any value.

<done> take scaler or iterable and callee decides ?

<done> circular imports: in cell import board only in test class

2019-12-20 tc

Don't like prior design where cell calls board.  Too many possibilities
for infinite calls are had to see what is going on.  Try again:

                                                            Need
Board:solve()
    while unsolved and board changed                        
         solve_cells_with_single_possible_value()
         solve_rcbs_with_single_possible_value_solution()
         solve_possibles_from_matching_cells()

Board:solve_cells_with_single_possible_value()
Board:solve_rcbs_with_single_possible_value_solution()
    build set(CellToSolve)
    Board.solve_cells( set(CellToSolve) )
                                                             
Board:solve_possibles_from_matching_cells()
    In all RCBs
       values_and_cells Identify cells with matching values
           set(CellToSolve) |= RCB.remove_from_possibles( all_values-values, all_cells - cells
           set(CellToSolve) |= RCB.remove_from_possibles( values, cells )          arg: values NOT value or either?

           Board.solve_cells( set(CellToSolve) )


Board.solve_cells(cells_to_solve = set(CellToSolve))
    for cell in cell_solve
        set(CellToSolve) = Board.solve_a_cell(cell, value)

    Board.solve_cells(set(CellToSolve)) # Recurse


Board: solve_a_cell(solved_cell, value)                        remove Board.a_cell_was_solved() contents to solve_a_cell()
    remove from Board.unsolved
    for rcb in solved_cell.rcbs()
        set(CellToSolve) |= RCB.a_cell_was_solved(cell)
    return set(CellToSolve)


RCB.a_cell_was_solved(solved_cell)                                 
    removes solved_cell_from unsolved_cells
    remove solved_cell.value from unsolved_value_possibles
    set(CellToSolve) = RCB.remove_from_possibles( solved_cell.value, except=solved_cell)
    return set(CellToSolve)
                                                                

RCB.remove_from_possibles( values, except_cells)                Allow multiple values for either argument
    for cell in unsolved_cells except except_cells
        if cell.remove_from_possibles(values)                   cell.remove_from_possibles() return True if possibles changed
            if 1 value left:
               set(CellToSolve).add(cell, sole_possible_value)  cell: raise/assert if no values left
            for rcb in RCB.other_rcbs(cell)                     RCB.other_rcbs(cell)
                set(CellToSolve) |= rcb.cell_possibles_changed()

        If any cell.possibles changed
            set(CellToSolve) |= self.cell_possibles_changed

        return set(CellToSolve)

                                                                           
RCB.cell_possibles_changed()
    unsolved_value_possibles = build_unsolved_value_possibles()
    for value in unsolved_value_possibles

    if len (unsolved_value_possibles[value]) == 0
       assertion error       ????
    if len(unsolved_value_possibles[value]) == 1
       set(CellToSolve).add( sole_cell, value)
    return set(CellToSolve)
                                                                          Make build just return uvp and never set it

Cell.solve()
    just sets value
Cell.remove_from_possibles(values)
    adjust possibles
    return True if they changed


This might do it.
Implement Board.__eq__
          sigh ran into problems with adding cell.__eq__
          Made it unhashable and hence can't be put into set or {}
          See:
          https://hynek.me/articles/hashes-and-equality/
just changed board.__eq__ to test cells values AND possible_values

Use in Board.solve()

commit "Major ReDesign #3 board.__eq__"

Then implement bottom up, unit testing new code
     cell
     rcb
     board

2019-12-21 tc

Implemented the change in stopping the Board.solve() loop
and got all kinds of wierdness.  unittests sometimes fail
and infinite loop on kato_puzzle.

<done> ../bin/dinkum-python-run-all-unit-tests --verbose
       runs test twice: test_is_solved_and_cnt (dinkum.sudoku.board.Test_board) ... test_is_solved_and_cnt(self) :

One of the board unit test failures was bug in test code where a input spec list was modified.
by product of change where I consolidated board input specs in test code.

solving kato puzzle is an infinite loop

2019-12-22 tc

Fixed the problem with Board.solve() stopping with no changes in board.
Changed last from copy constructor to a deep copy.  Times are still quite
high (milliseconds rather than microseconds)

Start the new design bottom up in cell

Got it coded.  Unit tests work except for solving a puzzle.
I had to neuter some assertion checks to get it pass unit tests.
    rcb.remove_from_possibles(): del self.unsolved_value_possibles[solved_value]
    I think there was another one, but I forget.

tommorrow.
commit "major redesign #3 ... almost done"

Get an assertion error in solving globe_mon_2019_12_02
Chase that

2019-12-23 tc

Redesign #3.a
Don't try to maintain RGB.unsolved_value_possibles incremental.
Just build in when need to use it.  Don't incrementally test
for a single cell providing an rcb value.

RCB:
    remove unsolved_value_possibles
    remove cell_possibles_changed()

Board:
    self.solve_rcbs_with_single_possible_value_solution()
    self.solve_possibles_from_matching_cells()
        build unsolved_value_possibles() and use it.

<done> keep board.solve_loop going when a cell is cell
without checking board equality.

Same solvability.  Solve times went up, but not sure last time
updated the times.  kato puzzle still has same number of unsolved.

hum... i wonder if it's unsolvable?

update the times.
commit "redesign #3.a"

Changed board.solve() exit... didn't change times

Perhaps kato_puzzle is really unsolvable.
Put it in kato and let's see

combine  __init__.py kato.py board.py rcb.py cell.py
    remove all import of dinkum...
    remove from import unittest onward

Should I do it manually or write a program.

Start out manually.
Didn't solve the sample puzzle which is the same
as our known kato puzzle.

2020-02-01 tc

Well.. back to it after a nice vacation.
Can't really think of more solution algorithms.
Only one I know of that I'm missing is pairing up
some pairs and projecting it.  It didn't solve the
kato problem.

So... I need to exaustively try all combinations.

move current solve() contents to solve_by_deduction()

Here's an algorithm:
    solve()
        solve_by_deduction(), return on success

        cell_num = most_constrained_cell_num()
                 # pick unsolved cell with fewest possibles
                 # if more than one
                 #     break tie with lowest total unsolved in RCB
                 # if still more than one
                 #     pick the first

       # Try all possibles
       solve_results = []_
       for v in cell.possibles.value
           b=Board(self) # copy
           b.cells[cell_num].set(v)
           solve_results.append( b.solve() )  # recurse

       if all unsolved
          return unsolvable
       if 1 solved
          self = b
          return solved
       if >1 solved
          return/raise multiple solutions

x solve() ==> solve_by_deduction()

x time board copy constructor         
    Board(bd_to_copy):         1855 microseconds
    copy.deepcopy(bd_to_copy): 4435 microseconds


x  implement board =                  use copy.deepcopy()
punt  replace deepcopy in current code

<done> fix dinkum-python-run-all-unittests.  It fails with test_bin/whatever.py
       write a python program.


i changed copy.deepcopy(self) to Board(self) and
solving kato_puzzle ran forever.

2020-02-02 tc

Sigh... two problems.

I can't run unittests... have to write my own dinkum_python_run_unittests using TestSuite I think.
Discover and fix the anomoly that copy.deepcopy(bd_to_copy) produces different results than Board(bd_to_copy)
Then go back an finish implementing the exhaustive solution.

dinkum_python_run_unittests  --root_dir dir --tests test_a, test_b  --args arguments to test runner
    Builds TestSuite of all *.py in root_dir tree with class Test_*
    Issue warning if Test_* where * != module name
    ? Issue warning if *.py doesn't have testcode if not in *bin directory
    --suppress-warnings
    --list  shows test


Ugh.  I started implementing with TestLoader.discover.  but I get duplicate entries.:
    ~/projects/dinkum/project$ dinkum_python_run_unittests.py  2>&1 | grep test_str_constructor
        test_str_constructor (sudoku.board.Test_board)
        test_str_constructor (dinkum.sudoku.board.Test_board)
        test_str_constructor (dinkum.sudoku.board.Test_board)
Didn't see anything on google about it.  Just implement my own I guess.

2020-02-03 tc

After writing my own discover.... turns out it had duplicates as well.
It was a bug printing the contents of the test suite.
I guess I'll leave my implementation as I can can filter/test intermediate results.

Sigh... when replace my printer with one from net [dinkum.unittest.utils.tests_from_testsuite() ]
I still get dups.  Lists some tests 4 times.

It's in unittest.TestLoader.loadTestsFromName()
if you pass it board.py, get duplicated test_XXX() entries.

The bug (I think) is the loadTests...() does an import.
Those import define additional TestCases.

I guess I have to avoid putting duplicate tests in the test suite myself --or--
better, only put in whose module names match. But it looks like test runner sorts out
the duplicates.  So the only problem is the listing.

I was wrong... they are being run twice as well.

I'm quite tired.  I wrote the code to filter dups and it didn't work.
Might be better to filter by only adding tests from <module> while scanning <module.py>

2020-02-04 tc

Was removing duplicates in the wrong place.

<moved> move full_dotted_modulename() from project.dirs to python.modnames ?

Added a prune function and it works .... except
unittest's for dinkum.unittest.dirs (where prune lives) fail as not importable
when run under dinkum_python_run_unittests, but work fine when invoked directly.

I think the answer is here:
    https://stackoverflow.com/questions/35034664/unittest-is-not-able-to-discover-run-tests
Nope, it's not.  BTW I get same problems in python -m unittest discover

Answer in loader.errors

Finally, fixed by changing test code to user full module path.

what next?
x   git commit all "initial dinkum_run_unittests.py, sudoku code in progress, possibly broken"
x   move full_dotted_modulename() from project.dirs to python/modnames.py ?
x   move dinkum_python_run_unittests from dinkum/bin => dinkum/mas_unittests/bin
x   remove top_project_dir() from dirs.py
x       walk up directories that are packages until get
x       a dir in PYTHONPATH. ? Ignore . -or- do last
x   Add --verbose [n], --failfast
m   Specify tests to run
m   Add dinkum warnings and --nowarnings
m       no unittest code (except *bin/*, __init__.py ?)
m       Test_foo is not Test_<modulename>
m       foo.py is NOT executable
m       foo.py doesn't run test code?
m   Fix up main() error returns

sigh... unittest wasn't a package (no __init__.py).  When I added __init__.py,
I broke something.

It fails when run in dinkum directory.  An import of unittest picks up
dinkum/unittest instead of system unittest.

Probably best answer is to rename dinkum/unittest
Done..  ==> mas_unittest

2020-02-05 tc

When I changed the algorithm for full_dotted_modulename() to NOT use
dinkum or PYTHONPATH, but to just walk up directory path of the module
and stop when hit a non-package dir (__init__.py).  That broke
the executables in the bin directory:

            print ("###########################")
            for test in tests_from_TestSuite(module_test_suite) :
                print (type(test))
                print (test)
                print (test.id)
            print ("###########################")
            for (i,e) in enumerate(loader.errors) :
                print (i, e)
            print ("###########################")

###########################
<class 'unittest.loader._FailedTest'>
dinkum-install-from-git (unittest.loader._FailedTest)
<bound method TestCase.id of <unittest.loader._FailedTest testMethod=dinkum-install-from-git>>
###########################
0 Failed to import test module: dinkum-install-from-git
Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/loader.py", line 153, in loadTestsFromName
    module = __import__(module_name)
ModuleNotFoundError: No module named 'dinkum-install-from-git'

###########################
dinkum-install-from-git (unittest.loader._FailedTest) ... ERROR

Need to special case that.

2020-02-06 tc

Ran into difficulty.  Can't easily go back from "test in test_suite" to
filename so can detect if it's a bin or not.

Sigh... I guess I'll test for importability myself.
Got it to work.  Had to add file named "NO_PYTHON_UNITTESTS"
in a directory to suppress looking for unit tests 

done.

In process of handling os exit codes:
  change import errors into failures (this matches unittest vocabulary)
  make them work with --failfast.


2020-02-08 tc
Still working on dinkum_python_run_unittests.py

create bin/support:
    move support functions there
    add class FEW (failures,errors,warnings)

Left <moved>
   Specify tests to run
   Fix up main() error returns
   Add dinkum warnings and --nowarnings
       no unittest code (except *bin/*, __init__.py ?)
       Test_foo is not Test_<modulename>
       foo.py is NOT executable
       foo.py doesn't run test code?

<done> why multiple entries in sys.path of bin dir?
tc@gosnold:~/projects/dinkum/python$ ~/projects/dinkum/python/bin/dinkum_python_run_unittests.py 
cwd:  /home/tc/projects/dinkum/python
sys.path:
/home/tc/projects/dinkum/python/bin    exec location
/home/tc/projects                      added by bash.rc
/home/tc/projects/dinkum/python/bin    cwd????
...

tc@gosnold:~/play$ ~/projects/dinkum/python/bin/dinkum_python_run_unittests.py 
cwd:  /home/tc/play
sys.path:
/home/tc/projects/dinkum/python/bin
/home/tc/projects
/home/tc/play

2020-02-09 tc
Spent some time unsuccessfully trying to figure this out.
          ~/play/path.py
              import sys
              def p() :
                  for (i,p) in enumerate(sys.path) :
                      print (" ", i, p)
              p()
          

python3

tc@gosnold:~$ python3 -m play.path | head -3
  0                             # script directory
  1 /home/tc/projects           # PYTHONPATH
  2 /home/tc                    # CWD ?????
  3 /usr/lib/python36.zip
  4 /usr/lib/python3.6
  5 /usr/lib/python3.6/lib-dynload
  6 /usr/local/lib/python3.6/dist-packages
  7 /usr/lib/python3/dist-packages

dummy@gosnold:~$ python3 -m play.path
  0                             # script directory
  1 /usr/lib/python36.zip
  2 /usr/lib/python3.6
  3 /usr/lib/python3.6/lib-dynload
  4 /usr/local/lib/python3.6/dist-packages
  5 /usr/lib/python3/dist-packages

something in environment causing it
tc@gosnold:~$ python3 -E -m play.path
  0                             # script directory
  1 /usr/lib/python36.zip
  2 /usr/lib/python3.6
  3 /usr/lib/python3.6/lib-dynload
  4 /usr/local/lib/python3.6/dist-packages
  5 /usr/lib/python3/dist-packages

-s     : don't add user site directory to sys.path; also PYTHONNOUSERSITE
NOT user site directory
tc@gosnold:~$ python3 -s -m play.path
  0 
  1 /home/tc/projects                
  2 /home/tc                  # CWD ?????
  3 /usr/lib/python36.zip
  4 /usr/lib/python3.6
  5 /usr/lib/python3.6/lib-dynload
  6 /usr/local/lib/python3.6/dist-packages
  7 /usr/lib/python3/dist-packages

-S     : don't imply 'import site' on initialization
tc@gosnold:~$ python3 -S -m play.path
  0 
  1 /home/tc/projects
  2                            # CWD ?????
  3 /usr/lib/python36.zip
  4 /usr/lib/python3.6
  5 /usr/lib/python3.6
  6 /usr/lib/python3.6/lib-dynload


An the answer is........
    A trailing : on PYTHONPATH causes current working directory to be insert
    AT end of PYTHONPATH directories

    A leading : on PYTHONPATH causes current working directory to be inserted
    BEFORE the start of PYTHONPATH directories

See
https://stackoverflow.com/questions/33615156/why-does-pythonpath-with-trailing-colon-add-current-directory-to-sys-path?rq=1

The fix in bash.rc:
    export PYTHONPATH="/some/path${PYTHONPATH+":"}${PYTHONPATH-}"
    # The PYTHONPATH+ token inserts : if PYTHONPATH is defined
    # The PYTHONPATH- insert prior PYTHONPATH and doesn't generate
    #    an error in presence of "set -u" AND PYTHONPATH is not defined

Back to dinkum_python_run_unittests

Left <moved>
   Specify tests to run
   Fix up main() error returns .... implemented, needs testing 
   Add dinkum warnings and --nowarnings
       no unittest code (except *bin/*, __init__.py, test_data ?)
       Test_foo is not Test_<modulename> ?except tests/*.py?
       foo.py is NOT executable
       foo.py doesn't run test code?
   fix up --help to talk about warnings
   
2020-02-13 tc

It's duplicating tests:
    dinkum.python.bin.support.Test_support.test_need_immediate_os_return
    dinkum.python.bin.support.Test_support.test_os_return_code
    dinkum.python.bin.support.Test_support.test_update_from_TestResult
    support.Test_support.test_need_immediate_os_return
    support.Test_support.test_os_return_code
    support.Test_support.test_update_from_TestResult

It's because dinkum.python.bin imports support (without full dotted path)
and see's it twice.

Bug fix: make testing from duplicates convert to full package path before
         comparision

         <done>
         full_dotted_modulename(pathname)
             now constructs pkg.pkg from files that have __init__.py in them
             import may fail if 
                     # where a..d are packages
                     PYTHONPATH ==> .../parent/a
                     a.b.c.d.mod won't import
                     b.c.d.mod   will import

             So construct full dotted path as do now
               while (dotted.path)
                 for p in PYTHONPATH :
                     if p+dotted.path.mod exists :
                         return dotted.path
                 remove lead (left component) of dotted_path
             just return the full dotted path

2020-02-14 tc
2020-02-16 tc

I was getting unittest failures in modnames.
Had some real bugs (Falsely passing test),
but then discovered that since python 3.3 you DO NOT NEED
a __init__.py to import something.  Just the directory.  Sigh.

Got to remove some tests.

Was still trying to get duplicate support tests removed.
I think I'm missing a call somewhere os.path.abs_path()

2020-02-17 tc

What a mess.  The stack is deep with many forks.

<moved>
x    I need to deal with package dirs no longer require an __init__.py
x    (as of python 3.3).
x    fix up currently failing tests
x    delete test_data/not_a_package_dir and deal fix up tests
x    search all code for __init__.py and remove
x   probably delete (or change algorithm) is_package_dir()

    Clean up vocabulary/usage
x        dotted_module_name    a.b.c.mod or mod
x        module_name           mod
x        abs_filename          /a/b/c/d        
x        Don't return (dotted_path, module) ... return dotted_module_name
punt     create module_name_from_dotted_module_name(dotted_module_name)

git commit -m "reworking dinkum_python_run_unittests.  All unittests past, but still some debug output"

x    I'm half way thru properly pruning duplicate support tests:
x    need an absolute path somewhere
x    need to use the longest dotted_modulename in case of duplicates
x    !! got automagically fixed by dotted_module_name_from_filename
x    !! returning longest path if there are duplicate paths

git commit -a -m "dinkum_python_run_unittests: unittests pass, works"
[master 8279cf8] dinkum_python_run_unittests: unittests pass, works
 3 files changed, 4 insertions(+), 20 deletions(-)

<moved>
x    --start_dir -sd
x
x   --import_dir -id
x   Specify tests to run: dfpmTCtf
x
x     not full path anymore
x     cd ~/projects/dinkum
x     ~/projects/dinkum/python/bin/dinkum_python_run_unittests.py --list
x         dinkum.python.modnames.Test_modnames.test_module_name_from_filename
x         support.Test_support.test_need_immediate_os_return
x         support.Test_support.test_os_return_code
x         support.Test_support.test_update_from_TestResult
x         dinkum.mas_unittest.utils.Test_utils.test_TestLoader_err_msg
x
m  Fix up main() error returns .... implemented, needs testing 
m   Add dinkum warnings and --nowarnings
m      no unittest code (except *bin/*, __init__.py, test_data ?) [refactor bin from support.py]
x      Test_foo is not Test_<modulename> ?except tests/*.py?
x      foo.py is NOT executable
x      foo.py doesn't run test code?
x   fix up --help to talk about warnings

2020-02-18 tc
2020-02-19 tc

Got all the filter code written and unittested, but doesn't produce the desired results.
I think mainly because not getting modulename from the test, but from passed in argument.
Should probably just pass in test, get modulename from the test, and filename from modulename.

tomorrow....
2020-02-20 tc

<done> when all done with support bug fix.  Move it to python.run_ut_support.py

Got the test selection code working.
git commit -m "dinkum_python_run_unittests: test selection working"

Got truncated support module names working
git commit -m "dinkum_python_run_unittests: used longest dotted_module_name"

move python/bin/support.py    to
     python/rut_support.py
git commit -m "moved python/bin/support.py to python/rut_support.py"


Got warning detection almost working.  Got stuck on trying to detect
no unittest code as it loader doesn't return a test for it.

If it's executable, just run the *.py.  Capture output.
grep for "ran XXX tests"
if zero, it's no good.

2020-02-22 tc

additions to dinkum_python_run_unittests coded, but not tested.
Working on coding_standards.py

All the warning code works.

git commit -m "dinkum_python_run_unittests ALMOST done"

Here is what's left to do (I think)
<moved>
x        overall scheme needs to be re thought.  Can't detect no unit tests
x        at end of loop as there's won't be any tests there to dig the filename
x        out of.  I think we change to:
x            loadTestsFromFile
x            filter it
x            check for warnings
x            add to final suite
x            don't check for warnings at the end
m   implement exception bin (except *bin/*, __init__.py, test_data ?) [refactor bin from support.py]
m   Make sure fdTtm is used
x    --import path (check it is being used and/or test)
m    --nowarnings (check --help output for consistency)
m                  suppress warnings on --list ?
m    Fix up main() error returns .... implemented, needs testing
m    ? fix up --help to talk about warnings
m    commit
m    remove warnings from other code

2020-02-23 tc

Here is the algorithm rework:

Don't currently filter based on directory.

os.walk
x  continue on NO_PYTHON_UNITTESTS
x  iterate over files
x    continue on not *.py
x    continue is_filename_filtered()
              if no filters       return False
              if no file filters, return False
              filter based on filename alone
x    Test for importability
x    ts=loadTestsFromFile()
x    filter again for test filters ts=filter_TestSuite
x     Check for warnings

remove dups (but probably don't have to)
list
print warnings
run

curr results 90 tests/ 5 warnings

Getting duplicate warnings:
#### /home/tc/projects/dinkum/keno/__init__.py
#### /home/tc/projects/dinkum/keno/keno_best_bet.py
dinkum.keno.keno.KenoTest.test_ncr
dinkum.keno.keno.KenoTest.test_odds
WARNING:Not executable module_name:dinkum.keno.keno filename:/home/tc/projects/dinkum/keno/keno.py
WARNING:Bad TestCase name: KenoTest module_name:dinkum.keno.keno filename:/home/tc/projects/dinkum/keno/keno.py
#### /home/tc/projects/dinkum/keno/keno.py
dinkum.keno.keno.KenoTest.test_ncr
dinkum.keno.keno.KenoTest.test_odds
WARNING:Not executable module_name:dinkum.keno.keno filename:/home/tc/projects/dinkum/keno/keno.py
WARNING:Bad TestCase name: KenoTest module_name:dinkum.keno.keno filename:/home/tc/projects/dinkum/keno/keno.py
Fixed, forgot an argument to loadTestsFromFile()

Now need to chase:
x    why don't /bin/*.py get a warning.
2020-02-24 tc

fixed this, removed exemption from inline code.

<todo>      
x    exception_dirs[] and exception_files[]
x    implement exception bin (except *bin/*, __init__.py, test_data ?) [refactor bin from support.py]
x     commit -m "unittest dirs/file exceptions for coding standards"
x     Made E/F/W output be in fixed width columns
x     commit -m "run unittest output in fixed width columns"
x
x     Make sure fdTtm is used
x    --nowarnings (check --help output for consistency)
x                  suppress warnings on --list ?
x    Fix up main() error returns .... implemented, needs testing
x    EXIT STATUS
x  x  0  No failures, errors or warnings
x  -  1  Some unknown exception raised
x  -  2  Some kind of command line problem
x     3  Errors occurred                            import_errors.py
x     4  Failures occurred (but no Errors)          test_failures.py
x     5  Warnings occurred (but no Errors/Failures and NOT ignoring_warnings)
                                                   testcase_misnamed.py
x   ? fix up --help to talk about warnings
x    remove warnings from other code

DONE!

Back to sudoku.... but not today.


